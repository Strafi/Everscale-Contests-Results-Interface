{"version":3,"sources":["api/Database.js","components/App/index.js","components/icons/LensIcon.js","components/icons/ArrowIcon.js","components/icons/CheckedIcon.js","components/icons/BackIcon.js","components/icons/CancelIcon.js","helpers/getUTCDate.js","helpers/exportToExcel.js","helpers/sortSubmissions.js","helpers/parseRewards.js","helpers/processSubmissionsInfo.js","helpers/sortJury.js","helpers/createContestUrl.js","helpers/createWalletUrl.js","helpers/formatRewardToShow.js","helpers/calcRewardForJury.js","helpers/hooks/useSearchParams.js","components/SearchBar/index.js","components/Header/index.js","components/Contest/ContestHeader/ContestHeaderControls.js","components/Contest/ContestHeader/index.js","components/Contest/ContestTableTh.js","components/Contest/styles.js","components/Contest/ContestTableHeader.js","components/Contest/ContestTableTd.js","components/Contest/RewardInput.js","components/Contest/ContestTableBody.js","components/Contest/index.js","components/ContestsList/ListItem.js","components/ContestsList/SubgovSwitcher.js","components/ContestsList/index.js","components/Loader/index.js","components/TutorialPopup/index.js","components/OptionsList/index.js","index.js","store/actions/common.js","store/reducers/contest.js","store/reducers/common.js","store/reducers/index.js","store/index.js","constants/index.js","contest.abi.js","api/Ton.js","store/actions/contest.js"],"names":["DatabaseApi","this","client","createClient","space","process","environment","accessToken","params","skip","governance","address","query","content_type","DB_CONTENT_TYPES","CONTEST","order","GOVERNANCE","getEntries","a","getContests","res","contestInfo","items","fields","name","console","warn","DEFAULT_GOVERNANCE","NAME","govRes","governances","map","item","error","databaseApi","App","isTutorialActive","useSelector","state","common","appContainerClassName","className","exact","path","component","ContestsList","Contest","LensIcon","onClick","width","height","viewBox","fill","xmlns","d","stroke","y1","x2","y2","transform","ArrowIcon","CheckedIcon","x","y","BackIcon","strokeWidth","CancelIcon","strokeLinecap","strokeLinejoin","getUTCDate","date","Date","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","prepareSubmissions","contestSubmissions","subm","place","reward","REWARD_TRIGGER_FOR_INPUT","id","score","acceptAmount","rejectAmount","participantAddress","link","fileLink","prepareJury","contestJury","jury","juryAddr","abstainAmount","totalVotes","push","juryRewardPercent","submissions","infoToStringify","title","infoToSend","JSON","stringify","fetch","method","headers","body","blob","url","document","createElement","download","href","click","downloadTable","URL","createObjectURL","exportToExcel","sortSubmissions","submission","sortBy","SORT_BY_VALUES_PARTICIPANTS","DEFAULT","isAskending","sortedSubmissions","sort","b","firstEl","secondEl","parseInt","parseRewards","rewards","parsedRewards","rewardsRange","split","rangeStart","rangeEnd","rangeStartNum","rangeEndNum","i","err","getSubmissionsWithFullInfo","contestRewards","prevReward","prevSubmIndex","submissionsWithSameScore","submissionsWithFullInfo","index","initialArray","Number","isNaN","prevSubm","isRejected","isUnderThreshold","tempToCollectSequence","lastSequenceIndex","Object","keys","pop","submIndex","numberSubmIndex","isLastIndex","rewardsForSequence","values","rewardForSubmInSequence","reduce","previousValue","currentValue","length","submSeqIndex","processSubmissionsInfo","initialSubmissionsInfo","options","isCountRejectAsZero","threshold","shouldCheckThreshold","submissionInfo","marks","newSubmInfo","normalizedScore","currentMarkObj","mark","toFixed","SCORE","sortJury","jurors","SORT_BY_VALUES_JURY","juryToSort","sortedJury","normalizedJury","acc","createContestUrl","contestAddress","createWalletUrl","wallet","EXPLORER_BASE_URL","formatRewardToShow","toLocaleString","calcRewardForJury","juryAcceptAmount","juryRejectAmount","totalAcceptAmount","totalRejectAmount","totalRewardForParticipants","useSearchParams","SearchBar","inputValue","isInvalidAddress","isSearching","searchContest","props","contestsInfo","history","setContestInfo","TonApi","isAddressValid","setState","getContestInfo","contestInfoFromBlockchain","contestUrl","handleInputChange","event","target","value","handleKeyPress","shiftKey","key","altKey","preventDefault","searchBarClassName","type","placeholder","onChange","onKeyPress","Component","SearchBarWithRedux","connect","contest","withRouter","Header","match","useRouteMatch","dispatch","useDispatch","to","setIsTutorialActive","ContestHeaderControls","setJuryView","exportExcel","isJuryView","setJuryRewardPercent","isInputFilled","participantsButtonClassName","juryButtonClassName","juryRewardInputClassName","undefined","percent","ContestHeader","isControlsVisible","setIsCountRejectAsZero","setThreshold","now","isUnderway","contestDeadline","isVoting","votingDeadline","statusClassName","statusText","rel","selectedItem","e","checked","htmlFor","normalizedThreshold","handleThresholdChange","ContestTableTh","children","styles","fullClassName","style","hiddenTitleStyles","color","fontSize","greenCellStyles","redCellStyles","TableHeaderForParticipants","submissionsSortParams","field","placeClassName","PLACE","submissionClassName","SUBMISSION_ID","acceptedClassName","ACCEPTED","rejectedClassName","REJECTED","TableHeaderForJury","jurySortParams","idClassName","JURY_ID","votesCountClassName","TOTAL_VOTES","abstainedClassName","ABSTAINED","ContestTableHeader","colSpan","ContestTableTd","RewardInput","submissionId","useState","setReward","updateRewardForSubmission","updateSubmissionReward","onBlur","ContestTableBody","collectionToRender","submissionsToRender","scoreToShow","rowClassName","walletUrl","shouldShowInput","rewardToShow","tabIndex","totalAccept","totalReject","totalAbstain","totalRewardForJury","juryToRender","forEach","juryVotes","isGrey","setRemovedJuror","removeJury","defaultSubmissionsSortParams","defaultJurySortParams","fetchSubmissionsInfo","useCache","addressFromUrl","contestInfoFromRedux","setSubmissionsInfo","setJuryInfo","fullContestInfo","getContestFullInfo","getContestSubmissionsAndJurors","submissionsWithStats","juryStats","processedSubmissions","Promise","all","getContestByAddress","contestInfoFromDB","rewardPercent","newSortField","newSortParams","setTimeout","prevProps","removedJurorsForContest","hasSubmissions","shouldShowEmpty","shouldShowLoader","isFailed","ContestWithRedux","location","submissionsInfo","jurorsInfo","removedJurors","searchString","search","URLSearchParams","get","ListItem","datePart","contestDateToOperate","endedAtStr","toLocaleDateString","month","day","yearStr","year","timeStr","toLocaleTimeString","hour","minute","getDatePartToShow","linkAddress","listItemClassName","SubgovSwitcher","selectedGovernance","governancesToRender","filter","gov","setSelectedSubgov","fullName","isLoaderVisible","fetchGovernances","getGovernances","fetchContests","setBulkContestsInfo","lastSelectedGovernance","contestsFromDB","contestsWithFullInfo","contestFromDB","rest","renderContestItems","Loader","imgSrc","imgAlt","src","alt","TutorialPopup","wrapperRef","useRef","ref","current","MAIN_GOV_LINK","marginBottom","OptionsList","isDisabled","switcherBlockRef","listRef","isListOpen","setIsListOpen","handleClickOutside","useCallback","contains","useEffect","addEventListener","removeEventListener","listClassName","switcherBlockClassName","require","config","init","ReactDOM","render","store","getElementById","SET_SELECTED_SUBGOV","SET_IS_TUTORIAL_ACTIVE","selectedSubgov","payload","isActive","initialState","contestReducer","action","SET_CONTEST_INFO","SET_BULK_CONTESTS_INFO","ADD_BULK_CONTESTS_INFO","SET_SUBMISSIONS_INFO","SET_JURY_INFO","UPDATE_SUBMISSION_REWARD","newSubmissionsInfo","updatedContestSubmissions","SET_REMOVED_JUROR","newRemovedJurors","FULL_NAME","commonReducer","rootReducer","combineReducers","middleware","thunk","composedEnhancers","compose","applyMiddleware","createStore","module","exports","REWARD","EMPTY_ADDRESS","contestAbi","bocCache","Map","votesPerJurorCache","TonClient","useBinaryLibrary","libWeb","network","endpoints","runContestFunction","contendersInfo","ids","createdAtTimestamp","appliedAts","substr","createdAtDate","addrs","discussionLink","Buffer","from","forumLinks","toString","fileLinks","hash","hashes","createdAt","contactAddress","contacts","updateJurorsStatFromCollection","collection","stat","getState","getVotesPerJurorForSubmission","votesPerJuror","jurorsFor","jurorsAbstained","jurorsAgainst","jurorsForArr","marksObj","includes","jurorsAbstainedArr","jurorsRejectArr","sumbStats","jurorsReject","counter","submId","has","set","infoAndProgress","contestProgress","utils","convert_address","output_format","result","functionName","functionInput","boc","eq","net","wait_for_collection","apiMessageParams","abi","call_set","function_name","signer","input","encode_message","abiMessage","tvm","run_tvm","message","account","contestFunctionRes","decoded","output","tonApi","bulkContests"],"mappings":"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","file":"static/js/main.39de3aad.chunk.js","sourcesContent":["import { createClient } from 'contentful';\nimport { DB_CONTENT_TYPES, DEFAULT_GOVERNANCE } from 'src/constants';\n\nclass DatabaseApi {\n\tinit() {\n\t\tthis.client = createClient({\n\t\t\tspace: process.env.REACT_APP_CONTENTFUL_SPACE_ID,\n\t\t\tenvironment: 'master',\n\t\t\taccessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN,\n\t\t})\n\t}\n\n\tgetContests(params = {}) {\n\t\tconst { skip = 0, governance, address } = params;\n\t\tconst query = {\n\t\t\tskip,\n\t\t\tcontent_type: DB_CONTENT_TYPES.CONTEST,\n\t\t\torder: '-sys.createdAt'\n\t\t};\n\n\t\tif (governance) {\n\t\t\tquery['fields.governance.sys.contentType.sys.id'] = DB_CONTENT_TYPES.GOVERNANCE;\n\t\t\tquery['fields.governance.fields.name'] = governance;\n\t\t}\n\n\t\tif (address)\n\t\t\tquery['fields.address'] = address;\n\n\t\treturn this.client.getEntries(query);\n\t}\n\n\tasync getContestByAddress(address) {\n\t\ttry {\n\t\t\tconst res = await this.getContests({ address });\n\t\t\tconst contestInfo = res.items[0].fields;\n\t\t\tcontestInfo.governance = contestInfo.governance.fields.name;\n\t\t\t\n\t\t\treturn contestInfo;\n\t\t} catch(err) {\n\t\t\tconsole.warn('No contest found in DB by address: ', address);\n\n\t\t\treturn {\n\t\t\t\tgovernance: DEFAULT_GOVERNANCE.NAME\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getGovernances() {\n\t\ttry {\n\t\t\tconst govRes = await this.client.getEntries({\n\t\t\t\tcontent_type: DB_CONTENT_TYPES.GOVERNANCE,\n\t\t\t\torder: 'fields.name',\n\t\t\t});\n\t\t\tconst governances = govRes.items.map(item => item.fields);\n\n\t\t\treturn governances\n\t\t} catch (err) {\n\t\t\tconsole.error('Failed to fetch governances: ', err);\n\n\t\t\treturn [];\n\t\t}\n\t}\n}\n\nconst databaseApi = new DatabaseApi();\n\nexport default databaseApi;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { Header, ContestsList, Contest, TutorialPopup } from 'src/components';\nimport './index.scss';\n\nconst App = () => {\n\tconst isTutorialActive = useSelector(state => state.common.isTutorialActive);\n\tconst appContainerClassName = `app-container ${isTutorialActive ? 'app-container--scroll-disabled' : ''}`;\n\n\treturn (\n\t\t<div className={appContainerClassName}>\n\t\t\t<div className='app-container__flex-wrapper'>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/' component={ContestsList} />\n\t\t\t\t\t<Route path='/contest' component={Contest} />\n\t\t\t\t</Switch>\n\t\t\t\t{isTutorialActive && <TutorialPopup />}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\n\nconst LensIcon = ({ onClick = () => false }) => (\n\t<svg\n\t\tclassName='lens-icon'\n\t\twidth='22'\n\t\theight='22'\n\t\tviewBox='0 0 22 22'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t\tonClick={onClick}\n\t>\n\t\t<path\n\t\t\td='M16.8881 8.72414C16.8881 13.2678 13.2179 16.9483 8.69405 16.9483C4.17023 16.9483 0.5 13.2678 0.5 8.72414C0.5 4.18044 4.17023 0.5 8.69405 0.5C13.2179 0.5 16.8881 4.18044 16.8881 8.72414Z'\n\t\t\tstroke='#6F6F6F'\n\t\t/>\n\t\t<line\n\t\t\ty1='-0.5'\n\t\t\tx2='9.63903'\n\t\t\ty2='-0.5'\n\t\t\ttransform='matrix(0.705884 0.708327 -0.705884 0.708327 14.3643 15.1724)'\n\t\t\tstroke='#6F6F6F'\n\t\t/>\n\t</svg>\n)\n\nexport default LensIcon;\n","import React from 'react';\n\nconst ArrowIcon = () => (\n\t<svg\n\t\tclassName='arrow-icon'\n\t\twidth='14'\n\t\theight='9'\n\t\tviewBox='0 0 14 9'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t>\n\t\t<path d='M6.76449 9L0.338936 0.230769L13.19 0.23077L6.76449 9Z' fill='#737373'/>\n\t</svg>\n)\n\nexport default ArrowIcon;\n","import React from 'react';\n\nconst CheckedIcon = () => (\n\t<svg\n\t\tclassName='checked-icon'\n\t\twidth='20'\n\t\theight='14'\n\t\tviewBox='0 0 20 14'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t>\n\t\t<rect x='1.63672' y='5.36548' width='9.96256' height='1.81138' transform='rotate(45 1.63672 5.36548)' fill='#6F6F6F'/>\n\t\t<rect x='19.0166' y='2.06494' width='16.4416' height='1.81138' transform='rotate(135 19.0166 2.06494)' fill='#6F6F6F'/>\n\t</svg>\n)\n\nexport default CheckedIcon;\n","import React from 'react';\n\nconst BackIcon = () => (\n\t<svg\n\t\tclassName='back-icon'\n\t\twidth='20'\n\t\theight='20'\n\t\tviewBox='0 0 20 20'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t>\n\t\t<path d='M11.0156 2L3.00018 10.0154L11.0156 18.0309' stroke='#5287C3' strokeWidth='3'/>\n\t</svg>\n)\n\nexport default BackIcon;\n","import React from 'react';\n\nconst CancelIcon = ({ onClick = () => false }) => (\n\t<svg\n\t\tclassName='cancel-icon'\n\t\tonClick={onClick}\n\t\twidth='12'\n\t\theight='12'\n\t\tviewBox='0 0 12 12'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t>\n\t\t<path d='M9.99902 2L1.99989 9.99914' stroke='#BABABA' strokeWidth='1.5' strokeLinecap='round' strokeLinejoin='round'/>\n\t\t<path d='M2.00098 2L10.0001 9.99914' stroke='#BABABA' strokeWidth='1.5' strokeLinecap='round' strokeLinejoin='round'/>\n\t</svg>\n)\n\nexport default CancelIcon;\n","function getUTCDate(date) {\n\treturn new Date(\n\t\tdate.getUTCFullYear(),\n\t\tdate.getUTCMonth(),\n\t\tdate.getUTCDate(),\n\t\tdate.getUTCHours(),\n\t\tdate.getUTCMinutes(),\n\t\tdate.getUTCSeconds(),\n\t);\n}\n\nexport default getUTCDate;\n","import { REWARD_TRIGGER_FOR_INPUT } from 'src/constants';\n\nfunction prepareSubmissions(contestSubmissions) {\n\treturn contestSubmissions.map(subm => ({\n\t\tplace: subm.place || 0,\n\t\treward: subm.reward === REWARD_TRIGGER_FOR_INPUT ? 0 : subm.reward || 0,\n\t\tid: subm.id,\n\t\tscore: subm.score || 0,\n\t\tacceptAmount: subm.acceptAmount,\n\t\trejectAmount: subm.rejectAmount,\n\t\taddress: subm.participantAddress,\n\t\tlink: subm.fileLink,\n\t}));\n}\n\nfunction prepareJury(contestJury) {\n\tconst jury = [];\n\n\tfor (const juryAddr in contestJury) {\n\t\tconst {\n\t\t\tacceptAmount = 0,\n\t\t\tabstainAmount = 0,\n\t\t\trejectAmount = 0,\n\t\t\tid,\n\t\t} = contestJury[juryAddr];\n\t\tconst totalVotes = acceptAmount + rejectAmount + abstainAmount;\n\n\t\tjury.push({\n\t\t\tid,\n\t\t\ttotalVotes,\n\t\t\tacceptAmount,\n\t\t\tabstainAmount,\n\t\t\trejectAmount,\n\t\t\taddress: juryAddr,\n\t\t})\n\t}\n\n\treturn jury;\n}\n\nasync function exportToExcel(contestInfo, contestSubmissions, contestJury, juryRewardPercent) {\n\tconst submissions = prepareSubmissions(contestSubmissions);\n\tconst jury = prepareJury(contestJury);\n\n\tconst infoToStringify = {\n\t\ttitle: contestInfo.title,\n\t\tlink: contestInfo.link,\n\t\tsubmissions,\n\t\tjury,\n\t\tjuryRewardPercent,\n\t}\n\n\tconst infoToSend = JSON.stringify(infoToStringify);\n\n\tconst res = await fetch('/api/v1/export-excel', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: infoToSend,\n\t});\n\n\tconst blob = await res.blob();\n\n\tconst downloadTable = url => {\n\t\tconst link = document.createElement('a');\n\t\tlink.download = `${infoToStringify.title}.xlsx`;\n\t\tlink.href = url;\n\t\tlink.click();\n\t};\n\n\tdownloadTable(URL.createObjectURL(blob));\n}\n\nexport default exportToExcel;","import { SORT_BY_VALUES_PARTICIPANTS } from 'src/constants';\n\nfunction sortSubmissions(submission, sortBy = SORT_BY_VALUES_PARTICIPANTS.DEFAULT, isAskending = false) {\n\tconst sortedSubmissions = submission.sort((a, b) => {\n\t\tlet firstEl = a[sortBy], secondEl = b[sortBy];\n\n\t\tif (typeof firstEl === 'string')\n\t\t\tfirstEl = parseInt(firstEl, 10);\n\n\t\tif (typeof secondEl === 'string')\n\t\t\tsecondEl = parseInt(secondEl, 10);\n\n\t\tconst compared = isAskending ? firstEl - secondEl : secondEl - firstEl;\n\n\t\treturn compared;\n\t})\n\n\treturn sortedSubmissions;\n}\n\nexport default sortSubmissions;\n","const REWARDS_RANGE_SEPARATOR = '-';\n\nfunction parseRewards(rewards) {\n\tif (!rewards)\n\t\treturn false;\n\n\ttry {\n\t\tconst parsedRewards = {};\n\n\t\tfor (const rewardsRange in rewards) {\n\t\t\tconst [rangeStart, rangeEnd] = rewardsRange.split(REWARDS_RANGE_SEPARATOR);\n\n\t\t\tif (rangeEnd) {\n\t\t\t\tconst rangeStartNum = parseInt(rangeStart, 10);\n\t\t\t\tconst rangeEndNum = parseInt(rangeEnd, 10);\n\n\t\t\t\tfor (let i = rangeStartNum; i <= rangeEndNum; i++) {\n\t\t\t\t\tparsedRewards[i] = rewards[rewardsRange];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparsedRewards[rangeStart] = rewards[rangeStart];\n\t\t\t}\n\t\t}\n\n\t\treturn parsedRewards;\n\t} catch(err) {\n\t\tconsole.error('Error while parsing rewards: ', err);\n\n\t\treturn false;\n\t}\n}\n\nexport default parseRewards;\n","import { SORT_BY_VALUES_PARTICIPANTS, REWARD_TRIGGER_FOR_INPUT } from 'src/constants';\nimport sortSubmissions from './sortSubmissions';\nimport parseRewards from './parseRewards';\n\nfunction processSubmissionsInfo(initialSubmissionsInfo, contestRewards, options = {}) {\n\tconst { isCountRejectAsZero, threshold } = options;\n\tconst shouldCheckThreshold = typeof threshold === 'number';\n\n\tconst submissions = initialSubmissionsInfo.map(submissionInfo => {\n\t\tconst isRejected = submissionInfo.marks.length === 0\n\t\t\t? submissionInfo.rejectAmount > 0\n\t\t\t: submissionInfo.marks.length / submissionInfo.rejectAmount < 1;\n\t\tconst newSubmInfo = { ...submissionInfo, isRejected };\n\n\t\tif (isRejected) {\n\t\t\tnewSubmInfo.reward = 0;\n\t\t\tnewSubmInfo.score = 0;\n\t\t} else {\n\t\t\tconst marksSum = newSubmInfo.marks.reduce((previousValue, currentMarkObj) => {\n\t\t\t\treturn previousValue + parseInt(currentMarkObj.mark, 10);\n\t\t\t}, 0);\n\n\t\t\tconst scoreDelimiter = isCountRejectAsZero\n\t\t\t\t? newSubmInfo.marks.length + newSubmInfo.rejectAmount\n\t\t\t\t: newSubmInfo.marks.length;\n\t\t\tconst score = marksSum / scoreDelimiter;\n\t\t\tconst normalizedScore = score.toFixed(2);\n\t\t\tnewSubmInfo.score = +normalizedScore;\n\t\t\tnewSubmInfo.isUnderThreshold = shouldCheckThreshold && normalizedScore < threshold;\n\t\t}\n\n\t\tnewSubmInfo.acceptAmount = newSubmInfo.marks.length;\n\n\t\treturn newSubmInfo;\n\t});\n\n\tconst sortedSubmissions = sortSubmissions(submissions, SORT_BY_VALUES_PARTICIPANTS.SCORE);\n\tconst submissionsWithFullInfo = getSubmissionsWithFullInfo(sortedSubmissions, contestRewards);\n\n\treturn submissionsWithFullInfo;\n}\n\nfunction getSubmissionsWithFullInfo(sortedSubmissions, contestRewards) {\n\tconst parsedRewards = parseRewards(contestRewards);\n\tconst submissionsWithSameScore = {};\n\tlet prevReward;\n\n\tconst submissionsWithFullInfo = sortedSubmissions.map((subm, index, initialArray) => {\n\t\tif (Number.isNaN(subm.score)) {\n\t\t\treturn {\n\t\t\t\t...subm,\n\t\t\t\tplace: '',\n\t\t\t\treward: null,\n\t\t\t}\n\t\t}\n\n\t\tconst prevSubm = initialArray[index - 1];\n\t\tconst place = index + 1;\n\t\tlet reward;\n\n\t\tif (subm.isRejected || subm.isUnderThreshold) {\n\t\t\treward = 0;\n\t\t} else if (parsedRewards) {\n\t\t\treward = parsedRewards[place] || 0;\n\t\t} else {\n\t\t\treward = REWARD_TRIGGER_FOR_INPUT;\n\t\t}\n\n\t\tif (prevSubm && prevSubm.score === subm.score && subm.score !== 0) {\n\t\t\tsubmissionsWithSameScore[index - 1] = prevReward;\n\t\t\tsubmissionsWithSameScore[index] = reward;\n\t\t}\n\n\t\tprevReward = reward;\n\n\t\treturn {\n\t\t\t...subm,\n\t\t\tplace,\n\t\t\treward,\n\t\t}\n\t})\n\n\tlet tempToCollectSequence = {}, prevSubmIndex;\n\tconst lastSequenceIndex = +Object.keys(submissionsWithSameScore).pop();\n\tfor (const submIndex in submissionsWithSameScore) {\n\t\tconst numberSubmIndex = +submIndex;\n\t\tconst isLastIndex = numberSubmIndex === lastSequenceIndex;\n\t\tconst shouldCollectSequence = (!prevSubmIndex\n\t\t\t|| (\n\t\t\t\tprevSubmIndex + 1 === numberSubmIndex\n\t\t\t\t&& submissionsWithFullInfo[prevSubmIndex].score === submissionsWithFullInfo[numberSubmIndex].score\n\t\t\t))\n\t\t\t&& !isLastIndex\n\n\t\tif (shouldCollectSequence) {\n\t\t\ttempToCollectSequence[numberSubmIndex] = submissionsWithSameScore[numberSubmIndex];\n\t\t} else {\n\t\t\tif (isLastIndex)\n\t\t\t\ttempToCollectSequence[numberSubmIndex] = submissionsWithSameScore[numberSubmIndex];\n\n\t\t\tconst rewardsForSequence = Object.values(tempToCollectSequence);\n\t\t\tconst totalRewardForSequence = rewardsForSequence.reduce((previousValue, currentValue) => {\n\t\t\t\treturn previousValue + currentValue;\n\t\t\t}, 0);\n\n\t\t\tconst rewardForSubmInSequence = totalRewardForSequence / rewardsForSequence.length;\n\n\t\t\tfor (const submSeqIndex in tempToCollectSequence) {\n\t\t\t\tsubmissionsWithFullInfo[submSeqIndex].reward = rewardForSubmInSequence;\n\t\t\t}\n\n\t\t\ttempToCollectSequence = {\n\t\t\t\t[numberSubmIndex]: submissionsWithSameScore[numberSubmIndex]\n\t\t\t};\n\t\t}\n\n\t\tprevSubmIndex = numberSubmIndex;\n\t}\n\n\treturn submissionsWithFullInfo;\n}\n\nexport default processSubmissionsInfo;\n","import { SORT_BY_VALUES_JURY } from 'src/constants';\n\nfunction sortJury(jurors, sortBy = SORT_BY_VALUES_JURY.DEFAULT, isAskending = false) {\n\tconst juryToSort = [];\n\n\tfor (const juryAddr in jurors) {\n\t\tconst {\n\t\t\tacceptAmount = 0,\n\t\t\tabstainAmount = 0,\n\t\t\trejectAmount = 0,\n\t\t\tid,\n\t\t} = jurors[juryAddr];\n\t\tconst totalVotes = acceptAmount + rejectAmount + abstainAmount;\n\n\t\tjuryToSort.push({\n\t\t\taddress: juryAddr,\n\t\t\tacceptAmount,\n\t\t\tabstainAmount,\n\t\t\trejectAmount,\n\t\t\ttotalVotes,\n\t\t\tid,\n\t\t})\n\t}\n\n\tconst sortedJury = juryToSort.sort((a, b) => {\n\t\tlet firstEl = a[sortBy], secondEl = b[sortBy];\n\n\t\tif (typeof firstEl === 'string')\n\t\t\tfirstEl = parseInt(firstEl, 10);\n\n\t\tif (typeof secondEl === 'string')\n\t\t\tsecondEl = parseInt(secondEl, 10);\n\n\t\tconst compared = isAskending ? firstEl - secondEl : secondEl - firstEl;\n\n\t\treturn compared;\n\t})\n\n\tconst normalizedJury = sortedJury.reduce((acc, jury) => {\n\t\tconst  { \n\t\t\taddress,\n\t\t\tacceptAmount,\n\t\t\tabstainAmount,\n\t\t\trejectAmount,\n\t\t\tid,\n\t\t } = jury;\n\t\treturn {\n\t\t\t...acc,\n\t\t\t[address]: {\n\t\t\t\tacceptAmount,\n\t\t\t\tabstainAmount,\n\t\t\t\trejectAmount,\n\t\t\t\tid,\n\t\t\t}\n\t\t}\n\t}, {});\n\n\treturn normalizedJury;\n}\n\nexport default sortJury;\n","function createContestUrl(contestAddress) {\n\treturn `/contest?contestAddress=${contestAddress}`;\n}\n\nexport default createContestUrl;\n","import { EXPLORER_BASE_URL } from 'src/constants';\n\nfunction createWalletUrl(wallet) {\n\treturn `${EXPLORER_BASE_URL}${wallet}`;\n}\n\nexport default createWalletUrl;\n","function formatRewardToShow(reward) {\n\treturn reward.toLocaleString();\n}\n\nexport default formatRewardToShow;\n","function calcRewardForJury(\n\tjuryAcceptAmount,\n\tjuryRejectAmount,\n\ttotalAcceptAmount,\n\ttotalRejectAmount,\n\ttotalRewardForParticipants,\n\tjuryRewardPercent,\n) {\n\treturn (juryAcceptAmount + juryRejectAmount) / (totalAcceptAmount + totalRejectAmount) * totalRewardForParticipants * juryRewardPercent / 100\n}\n\nexport default calcRewardForJury;\n","import { useLocation } from 'react-router-dom';\n\nfunction useSearchParams() {\n\treturn new URLSearchParams(useLocation().search);\n}\n\nexport default useSearchParams;","/* eslint-disable camelcase */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setContestInfo } from 'src/store/actions/contest';\nimport { TonApi } from 'src/api';\nimport { createContestUrl } from 'src/helpers';\nimport { LensIcon } from 'src/components/icons';\nimport './index.scss';\n\nclass SearchBar extends Component {\n\tstate = {\n\t\tinputValue: '',\n\t\tisInvalidAddress: false,\n\t\tisSearching: false,\n\t}\n\n\tsearchContest = async () => {\n\t\tconst { inputValue: contestAddress, isSearching } = this.state;\n\t\tconst { contestsInfo, history, setContestInfo } = this.props;\n\n\t\tif (!contestAddress || isSearching)\n\t\t\treturn;\n\n\t\tconst isValidAddress = await TonApi.isAddressValid(contestAddress);\n\n\t\tif (!isValidAddress)\n\t\t\treturn this.setState({ isInvalidAddress: true });\n\n\t\tconst contestInfoFromRedux = contestsInfo[contestAddress];\n\n\t\tif (!contestInfoFromRedux) {\n\t\t\tthis.setState({ isSearching: true });\n\n\t\t\tconst contestInfoFromBlockchain = await TonApi.getContestInfo(contestAddress);\n\n\t\t\tthis.setState({ isSearching: false });\n\n\t\t\tif (!contestInfoFromBlockchain)\n\t\t\t\treturn this.setState({ isInvalidAddress: true });\n\t\t\n\t\t\tcontestInfoFromBlockchain.address = contestAddress;\n\t\t\tsetContestInfo(contestInfoFromBlockchain);\n\t\t}\n\n\t\tconst contestUrl = createContestUrl(contestAddress);\n\n\t\treturn history.push(contestUrl);\n\t}\n\n\thandleInputChange = event => {\n\t\tthis.setState({\n\t\t\tinputValue: event.target.value,\n\t\t\tisInvalidAddress: false,\n\t\t});\n\t}\n\n\thandleKeyPress = event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldSearch = isEnter && !shiftKey && !altKey;\n\n\t\tif (shouldSearch) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.searchContest();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { inputValue, isInvalidAddress, isSearching } = this.state;\n\n\t\tconst searchBarClassName = `search-bar-container ${isInvalidAddress ? 'search-bar-container--invalid' : ''} ${isSearching\n\t\t\t? 'search-bar-container--searching' : ''\n\t\t}`;\n\n\t\treturn (\n\t\t\t<div className={searchBarClassName}>\n\t\t\t\t<input\n\t\t\t\t\tclassName='search-bar-container__input'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Enter contest address'\n\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\tonKeyPress={this.handleKeyPress}\n\t\t\t\t/>\n\t\t\t\t<LensIcon onClick={this.searchContest} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ contest }) => {\n\tconst { contestsInfo } = contest;\n\n\treturn { contestsInfo }\n};\n\nconst SearchBarWithRedux = connect(mapStateToProps, {\n\tsetContestInfo,\n})(SearchBar);\n\nexport default withRouter(SearchBarWithRedux);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { setIsTutorialActive } from 'src/store/actions/common';\nimport { BackIcon } from 'src/components/icons';\nimport SearchBar from '../SearchBar';\nimport './index.scss';\n\nconst Header = () => {\n\tconst match = useRouteMatch('/contest');\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<header className='header-container'>\n\t\t\t<Link to='/'><h1>Free TON Contests Results</h1></Link>\n\t\t\t{match\n\t\t\t\t&& <Link to='/' className='header-container__back-button'>\n\t\t\t\t\t<BackIcon />\n\t\t\t\t\t<p>Back</p>\n\t\t\t\t</Link>\n\t\t\t}\n\t\t\t<SearchBar />\n\t\t\t<div\n\t\t\t\tclassName='header-container__address-explanation'\n\t\t\t\tonClick={() => dispatch(setIsTutorialActive(true))}\n\t\t\t>\n\t\t\t\tWhere to find contest address?\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import React from 'react';\nimport { CheckedIcon } from 'src/components/icons';\n\nconst ContestHeaderControls = ({\n\tsetJuryView, exportExcel, isJuryView, juryRewardPercent, setJuryRewardPercent\n}) => {\n\tconst handleInputChange = event => {\n\t\tif (!event.target.value)\n\t\t\treturn setJuryRewardPercent(undefined);\n\n\t\tconst percent = +event.target.value;\n\n\t\tif (percent && !Number.isNaN(percent)) {\n\t\t\tsetJuryRewardPercent(percent);\n\t\t}\n\t}\n\n\tconst isInputFilled = typeof juryRewardPercent === 'number' && !Number.isNaN(juryRewardPercent);\n\n\tconst participantsButtonClassName = `contest-header__participants-view-button ${isJuryView\n\t\t? '' : 'contest-header__participants-view-button--active'\n\t}`;\n\tconst juryButtonClassName = `contest-header__jury-view-button ${isJuryView\n\t\t? 'contest-header__jury-view-button--active' : ''\n\t}`;\n\tconst juryRewardInputClassName = `contest-header__reward-input-container ${isInputFilled\n\t\t? 'contest-header__reward-input-container--filled' : ''\n\t}`\n\n\n\treturn (\n\t\t<div className='contest-header__controls contest-header__controls--center'>\n\t\t\t<div className='contest-header__view-switcher'>\n\t\t\t\t<div onClick={() => setJuryView(false)} className={participantsButtonClassName}>\n\t\t\t\t\tParticipants\n\t\t\t\t</div>\n\t\t\t\t<div onClick={() => setJuryView(true)} className={juryButtonClassName}>\n\t\t\t\t\tJury\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{isJuryView\n\t\t\t\t&& <div className={juryRewardInputClassName}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='contest-header__reward-input'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Enter jury reward %'\n\t\t\t\t\t\tvalue={juryRewardPercent}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckedIcon />\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t<div onClick={exportExcel} className='contest-header__export-button'>\n\t\t\t\tExport to .xlsx\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ContestHeaderControls;\n","import React from 'react';\n\nimport ContestHeaderControls from './ContestHeaderControls';\nimport { OptionsList } from 'src/components';\nimport './index.scss';\n\nconst ContestHeader = ({\n\tcontestInfo,\n\tsetJuryView,\n\texportExcel,\n\tisJuryView,\n\tjuryRewardPercent,\n\tsetJuryRewardPercent,\n\tisControlsVisible,\n\tisCountRejectAsZero,\n\tsetIsCountRejectAsZero,\n\tthreshold,\n\tsetThreshold,\n}) => {\n\tconst now = Date.now();\n\tconst isUnderway = now < contestInfo.contestDeadline * 1000;\n\tconst isVoting = now > contestInfo.contestDeadline * 1000 && now < contestInfo.votingDeadline * 1000;\n\tconst statusClassName = `contest-header__status ${isUnderway ? 'contest-header__status--underway' : ''} ${isVoting\n\t\t? 'contest-header__status--voting' : ''\n\t}`;\n\tconst statusText = isUnderway ? '(Underway)' : isVoting ? '(Voting)' : '';\n\n\tconst handleThresholdChange = threshold => {\n\t\tif (!threshold)\n\t\t\treturn setThreshold(undefined);\n\n\t\tconst normalizedThreshold = +threshold;\n\n\t\tif (!Number.isNaN(normalizedThreshold)\n\t\t\t&& normalizedThreshold >= 0\n\t\t\t&& normalizedThreshold <= 10\n\t\t)\n\t\t\tsetThreshold(normalizedThreshold);\n\t}\n\n\treturn (\n\t\t<div className='contest-header'>\n\t\t\t<div className='contest-header__controls'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='contest-header__header'>Results <span className={statusClassName}>{statusText}</span></div>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={contestInfo.link}\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\tclassName='contest-header__title'\n\t\t\t\t\t>\n\t\t\t\t\t\t{contestInfo.title}\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<OptionsList height={90} selectedItem='Options'>\n\t\t\t\t\t<div className='contest-header__options-list-item'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={isCountRejectAsZero}\n\t\t\t\t\t\t\tonChange={e => setIsCountRejectAsZero(e.target.checked)}\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tid=\"cbcountzero\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor=\"cbcountzero\">Count \"Reject\" as 0</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='contest-header__options-list-item'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={threshold}\n\t\t\t\t\t\t\tonChange={e => handleThresholdChange(e.target.value)}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tid=\"thresholdinput\"\n\t\t\t\t\t\t\tclassName='contest-header__threshold-input'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor=\"thresholdinput\">Threshold</label>\n\t\t\t\t\t</div>\n\t\t\t\t</OptionsList>\n\t\t\t</div>\n\t\t\t{isControlsVisible\n\t\t\t\t&& <ContestHeaderControls\n\t\t\t\t\tsetJuryView={setJuryView}\n\t\t\t\t\texportExcel={exportExcel}\n\t\t\t\t\tsetJuryRewardPercent={setJuryRewardPercent}\n\t\t\t\t\tisJuryView={isJuryView}\n\t\t\t\t\tjuryRewardPercent={juryRewardPercent}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default ContestHeader;\n","import React from 'react'\n\nconst ContestTableTh = ({ children, className, onClick = () => false, styles = {} }) => {\n\tlet fullClassName = 'contest-table__cell contest-table__cell--th';\n\n\tif (className)\n\t\tfullClassName += ' ' + className;\n\n\treturn (\n\t\t<th\n\t\t\tstyle={styles}\n\t\t\tonClick={onClick}\n\t\t\tclassName={fullClassName}\n\t\t>\n\t\t\t{children}\n\t\t</th>\n\t)\n}\n\nexport default ContestTableTh;","export const hiddenTitleStyles = {\n\tcolor: '#0F8CFF',\n\tfontSize: '26px'\n}\n\nexport const greenCellStyles = {\n\tcolor: '#0D9F1C',\n}\n\nexport const redCellStyles = {\n\tcolor: '#D20808',\n}\n","import React from 'react';\nimport Th from './ContestTableTh';\nimport { hiddenTitleStyles } from './styles';\nimport { SORT_BY_VALUES_PARTICIPANTS, SORT_BY_VALUES_JURY } from 'src/constants';\nimport { ArrowIcon } from 'src/components/icons';\n\nconst ContestTableHeader = ({\n\tcontestInfo, isJuryView, submissionsSortParams, jurySortParams, sortSubmissions, sortJury\n}) => {\n\tconst { title } = contestInfo;\n\n\treturn (\n\t\t<thead className='contest-table__header'>\n\t\t\t<tr className='contest-table__header-hidden-line'><th colSpan='7'/></tr>\n\t\t\t<tr className='contest-table__header-hidden-line'>\n\t\t\t\t<th colSpan='7' style={hiddenTitleStyles}><a href={contestInfo.link}>{title}</a></th>\n\t\t\t</tr>\n\t\t\t{\n\t\t\t\tisJuryView\n\t\t\t\t\t? <TableHeaderForJury\n\t\t\t\t\t\tjurySortParams={jurySortParams}\n\t\t\t\t\t\tsortJury={sortJury}\n\t\t\t\t\t/>\n\t\t\t\t\t: <TableHeaderForParticipants\n\t\t\t\t\t\tsubmissionsSortParams={submissionsSortParams}\n\t\t\t\t\t\tsortSubmissions={sortSubmissions}\n\t\t\t\t\t/>\n\t\t\t}\n\t\t</thead>\n\t)\n}\n\nconst TableHeaderForParticipants = ({ submissionsSortParams, sortSubmissions }) => {\n\tconst { field, isAskending } = submissionsSortParams;\n\tconst placeClassName = `${field === SORT_BY_VALUES_PARTICIPANTS.PLACE ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`;\n\tconst submissionClassName = `${field === SORT_BY_VALUES_PARTICIPANTS.SUBMISSION_ID ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`;\n\tconst acceptedClassName = `${field === SORT_BY_VALUES_PARTICIPANTS.ACCEPTED ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`\n\tconst rejectedClassName = `${field === SORT_BY_VALUES_PARTICIPANTS.REJECTED ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`\n\n\treturn (\n\t\t<tr className='contest-table__row'>\n\t\t\t<Th \n\t\t\t\tclassName={placeClassName}\n\t\t\t\tonClick={() => sortSubmissions(SORT_BY_VALUES_PARTICIPANTS.PLACE)}\n\t\t\t>\n\t\t\t\tPlace\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th>Reward</Th>\n\t\t\t<Th\n\t\t\t\tclassName={submissionClassName}\n\t\t\t\tonClick={() => sortSubmissions(SORT_BY_VALUES_PARTICIPANTS.SUBMISSION_ID)}\n\t\t\t>\n\t\t\t\tSubmission №\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th>Avg. Score</Th>\n\t\t\t<Th\n\t\t\t\tclassName={acceptedClassName}\n\t\t\t\tonClick={() => sortSubmissions(SORT_BY_VALUES_PARTICIPANTS.ACCEPTED)}\n\t\t\t>\n\t\t\t\tAccepted\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th\n\t\t\t\tclassName={rejectedClassName}\n\t\t\t\tonClick={() => sortSubmissions(SORT_BY_VALUES_PARTICIPANTS.REJECTED)}\n\t\t\t>\n\t\t\t\tRejected\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th className='contest-table__cell--wallet'>Wallet</Th>\n\t\t</tr>\n\t)\n};\n\nconst TableHeaderForJury = ({ jurySortParams, sortJury }) => {\n\tconst { field, isAskending } = jurySortParams;\n\tconst idClassName = `${field === SORT_BY_VALUES_JURY.JURY_ID ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`;\n\tconst votesCountClassName = `${field === SORT_BY_VALUES_JURY.TOTAL_VOTES ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`;\n\tconst acceptedClassName = `${field === SORT_BY_VALUES_JURY.ACCEPTED ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`\n\tconst abstainedClassName = `${field === SORT_BY_VALUES_JURY.ABSTAINED ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`\n\tconst rejectedClassName = `${field === SORT_BY_VALUES_JURY.REJECTED ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`\n\n\treturn (\n\t\t<tr className='contest-table__row'>\n\t\t\t<Th\n\t\t\t\tclassName={idClassName}\n\t\t\t\tonClick={() => sortJury(SORT_BY_VALUES_JURY.JURY_ID)}\n\t\t\t>\n\t\t\t\tJury №\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th>Reward</Th>\n\t\t\t<Th\n\t\t\t\tclassName={votesCountClassName}\n\t\t\t\tonClick={() => sortJury(SORT_BY_VALUES_JURY.TOTAL_VOTES)}\n\t\t\t>\n\t\t\t\tVotes Count\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th\n\t\t\t\tclassName={acceptedClassName}\n\t\t\t\tonClick={() => sortJury(SORT_BY_VALUES_JURY.ACCEPTED)}\n\t\t\t>\n\t\t\t\tAccepted\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th\n\t\t\t\tclassName={abstainedClassName}\n\t\t\t\tonClick={() => sortJury(SORT_BY_VALUES_JURY.ABSTAINED)}\n\t\t\t>\n\t\t\t\tAbstained\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th\n\t\t\t\tclassName={rejectedClassName}\n\t\t\t\tonClick={() => sortJury(SORT_BY_VALUES_JURY.REJECTED)}\n\t\t\t>\n\t\t\t\tRejected\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th className='contest-table__cell--wallet'>Wallet</Th>\n\t\t</tr>\n\t)\n}\n\nexport default ContestTableHeader;\n","import React from 'react'\n\nconst ContestTableTd = ({ children, className, styles = {} }) => {\n\tlet fullClassName = 'contest-table__cell';\n\n\tif (className)\n\t\tfullClassName += ' ' + className;\n\n\treturn (\n\t\t<td\n\t\t\tstyle={styles}\n\t\t\tclassName={fullClassName}\n\t\t>\n\t\t\t{children}\n\t\t</td>\n\t)\n}\n\nexport default ContestTableTd;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateSubmissionReward } from 'src/store/actions/contest';\n\nconst RewardInput = ({ contestAddress, submissionId }) => {\n\tconst [reward, setReward] = useState();\n\tconst dispatch = useDispatch();\n\n\tconst handleInputChange = event => {\n\t\tif (!event.target.value)\n\t\t\treturn setReward(undefined);\n\n\t\tconst reward = +event.target.value;\n\n\t\tif (typeof reward === 'number' && !Number.isNaN(reward)) {\n\t\t\tsetReward(reward);\n\t\t}\n\t}\n\n\tconst updateRewardForSubmission = () => {\n\t\tif (typeof reward === 'number' && !Number.isNaN(reward)) {\n\t\t\tdispatch(updateSubmissionReward({\n\t\t\t\tcontestAddress,\n\t\t\t\tsubmissionId,\n\t\t\t\treward\n\t\t\t}))\n\t\t}\n\t}\n\n\tconst handleKeyPress = event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldSetReward = isEnter && !shiftKey && !altKey;\n\n\t\tif (shouldSetReward) {\n\t\t\tevent.preventDefault();\n\t\t\tupdateRewardForSubmission();\n\t\t}\n\t}\n\n\treturn (\n\t\t<input\n\t\t\tclassName='contest-table__reward-input'\n\t\t\ttype='text'\n\t\t\tplaceholder='Enter reward'\n\t\t\tvalue={reward}\n\t\t\tonChange={handleInputChange}\n\t\t\tonBlur={updateRewardForSubmission}\n\t\t\tonKeyPress={handleKeyPress}\n\t\t/>\n\t)\n}\n\nexport default RewardInput\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateSubmissionReward, setRemovedJuror } from 'src/store/actions/contest';\nimport { createWalletUrl, formatRewardToShow, calcRewardForJury } from 'src/helpers';\nimport { REWARD_TRIGGER_FOR_INPUT } from 'src/constants';\nimport { CancelIcon } from 'src/components/icons';\nimport Td from './ContestTableTd';\nimport RewardInput from './RewardInput';\nimport { greenCellStyles, redCellStyles } from './styles';\n\nconst ContestTableBody = ({\n\tcontestSubmissions, isJuryView, contestJury, juryRewardPercent, contestAddress\n}) => {\n\tconst dispatch = useDispatch();\n\tconst removeSubmissionReward = submissionId => {\n\t\tdispatch(updateSubmissionReward({\n\t\t\tcontestAddress,\n\t\t\tsubmissionId,\n\t\t\treward: REWARD_TRIGGER_FOR_INPUT,\n\t\t}));\n\t}\n\tconst removeJury = juryAddr => {\n\t\tdispatch(setRemovedJuror(contestAddress, juryAddr));\n\t}\n\tlet totalRewardForParticipants = 0;\n\n\tconst submissionsToRender = contestSubmissions.map((submission, index) => {\n\t\tconst hasReward = typeof submission.reward === 'number' && !Number.isNaN(submission.reward);\n\t\tif (hasReward && submission.reward > 0)\n\t\t\ttotalRewardForParticipants += submission.reward;\n\n\t\tconst scoreToShow = !submission.score || Number.isNaN(submission.score)\n\t\t\t? ''\n\t\t\t: submission.score.toFixed(2);\n\t\tconst isGrey = index === 0 || index % 2 === 0;\n\t\tconst rowClassName = `contest-table__row ${isGrey\n\t\t\t? 'contest-table__row--grey' : ''\n\t\t} ${submission.isRejected || submission.isUnderThreshold ? 'contest-table__row--rejected' : ''}`;\n\t\tconst walletUrl = createWalletUrl(submission.participantAddress);\n\n\t\tconst shouldShowInput = !submission.isRejected && !submission.isUnderThreshold && submission.reward === REWARD_TRIGGER_FOR_INPUT;\n\t\tconst rewardToShow = typeof submission.reward === 'number' ? formatRewardToShow(submission.reward) : '';\n\n\t\treturn (\n\t\t\t<tr className={rowClassName} key={`${submission.participantAddress}${submission.id}`}>\n\t\t\t\t<Td>{submission.place}</Td>\n\t\t\t\t<Td>\n\t\t\t\t\t{shouldShowInput\n\t\t\t\t\t\t? <RewardInput\n\t\t\t\t\t\t\tcontestAddress={contestAddress}\n\t\t\t\t\t\t\tsubmissionId={submission.id}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t: <>\n\t\t\t\t\t\t\t{rewardToShow}\n\t\t\t\t\t\t\t{rewardToShow && !submission.isRejected && !submission.isUnderThreshold\n\t\t\t\t\t\t\t\t&& <CancelIcon onClick={() => removeSubmissionReward(submission.id)} />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t</Td>\n\t\t\t\t<Td>\n\t\t\t\t\t{submission.fileLink\n\t\t\t\t\t\t? <a href={submission.fileLink} tabIndex='-1' target='_blank' rel=\"noreferrer\">{submission.id}</a>\n\t\t\t\t\t\t: submission.id\n\t\t\t\t\t}\n\t\t\t\t</Td>\n\t\t\t\t<Td>{scoreToShow}</Td>\n\t\t\t\t<Td styles={greenCellStyles}>{submission.acceptAmount}</Td>\n\t\t\t\t<Td styles={redCellStyles}>{submission.rejectAmount}</Td>\n\t\t\t\t<Td className='contest-table__cell--wallet'>\n\t\t\t\t\t<a tabIndex='-1' href={walletUrl} target='_blank' rel=\"noreferrer\">{submission.participantAddress}</a>\n\t\t\t\t</Td>\n\t\t\t</tr>\n\t\t)\n\t});\n\n\tlet collectionToRender;\n\tlet totalAccept = 0, totalReject = 0, totalAbstain = 0, totalRewardForJury = 0;\n\n\tif (isJuryView) {\n\t\tconst juryToRender = [];\n\n\t\tObject.values(contestJury).forEach(jury => {\n\t\t\tconst {\n\t\t\t\tacceptAmount = 0,\n\t\t\t\tabstainAmount = 0,\n\t\t\t\trejectAmount = 0,\n\t\t\t} = jury\n\n\t\t\ttotalAccept += acceptAmount;\n\t\t\ttotalReject += rejectAmount;\n\t\t\ttotalAbstain += abstainAmount;\n\t\t});\n\n\t\tfor (const juryAddr in contestJury) {\n\t\t\tconst {\n\t\t\t\tacceptAmount = 0,\n\t\t\t\tabstainAmount = 0,\n\t\t\t\trejectAmount = 0,\n\t\t\t\tid,\n\t\t\t} = contestJury[juryAddr];\n\t\t\tconst juryVotes = acceptAmount + rejectAmount + abstainAmount;\n\t\t\tlet reward\n\n\t\t\tif (typeof juryRewardPercent === 'number' && !Number.isNaN(juryRewardPercent) && totalRewardForParticipants) {\n\t\t\t\treward = calcRewardForJury(acceptAmount, rejectAmount, totalAccept, totalReject, totalRewardForParticipants, juryRewardPercent);\n\t\t\t\ttotalRewardForJury += reward;\n\t\t\t}\n\t\t\t\n\t\t\tconst isGrey = juryToRender.length === 0 || juryToRender.length % 2 === 0;\n\t\t\tconst rowClassName = `contest-table__row ${isGrey ? 'contest-table__row--grey' : ''}`;\n\t\t\tconst walletUrl = createWalletUrl(juryAddr);\n\t\t\tconst rewardToShow = typeof reward === 'number' ? formatRewardToShow(+reward.toFixed(2)) : '';\n\n\t\t\tjuryToRender.push(\n\t\t\t\t<tr className={rowClassName} key={juryAddr}>\n\t\t\t\t\t<Td><CancelIcon onClick={() => removeJury(juryAddr)} />{id}</Td>\n\t\t\t\t\t<Td>{rewardToShow}</Td>\n\t\t\t\t\t<Td>{juryVotes}</Td>\n\t\t\t\t\t<Td styles={greenCellStyles}>{acceptAmount}</Td>\n\t\t\t\t\t<Td>{abstainAmount}</Td>\n\t\t\t\t\t<Td styles={redCellStyles}>{rejectAmount}</Td>\n\t\t\t\t\t<Td className='contest-table__cell--wallet'>\n\t\t\t\t\t\t<a href={walletUrl} target='_blank' rel=\"noreferrer\">{juryAddr}</a>\n\t\t\t\t\t</Td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t}\n\n\t\tcollectionToRender = juryToRender;\n\t} else {\n\t\tcollectionToRender = submissionsToRender;\n\t}\n\n\treturn (\n\t\t<tbody>\n\t\t\t{collectionToRender}\n\t\t\t<tr className='contest-table__row contest-table__row--total-row'>\n\t\t\t\t<Td>Total</Td>\n\t\t\t\t{\n\t\t\t\t\tisJuryView\n\t\t\t\t\t? <>\n\t\t\t\t\t\t<Td>{totalRewardForJury ? formatRewardToShow(+totalRewardForJury.toFixed(2)) : ''}</Td>\n\t\t\t\t\t\t<Td>{totalAccept + totalReject + totalAbstain}</Td>\n\t\t\t\t\t\t<Td styles={greenCellStyles}>{totalAccept}</Td>\n\t\t\t\t\t\t<Td>{totalAbstain}</Td>\n\t\t\t\t\t\t<Td styles={redCellStyles}>{totalReject}</Td>\n\t\t\t\t\t\t<Td />\n\t\t\t\t\t</>\n\t\t\t\t\t: <>\n\t\t\t\t\t\t<Td>{formatRewardToShow(totalRewardForParticipants) || ''}</Td>\n\t\t\t\t\t\t<Td />\n\t\t\t\t\t\t<Td />\n\t\t\t\t\t\t<Td />\n\t\t\t\t\t\t<Td />\n\t\t\t\t\t\t<Td />\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</tr>\n\t\t</tbody>\n\t)\n}\n\nexport default ContestTableBody;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { TonApi, DatabaseApi } from 'src/api';\nimport { exportToExcel, processSubmissionsInfo, sortSubmissions, sortJury } from 'src/helpers';\nimport { setContestInfo, setSubmissionsInfo, setJuryInfo } from 'src/store/actions/contest';\nimport { SORT_BY_VALUES_PARTICIPANTS, SORT_BY_VALUES_JURY } from 'src/constants';\nimport { Loader } from 'src/components';\nimport ContestHeader from './ContestHeader';\nimport ContestTableHeader from './ContestTableHeader';\nimport ContestTableBody from './ContestTableBody';\nimport './index.scss';\n\nconst defaultSubmissionsSortParams = {\n\tfield: SORT_BY_VALUES_PARTICIPANTS.DEFAULT,\n\tisAskending: true,\n}\n\nconst defaultJurySortParams = {\n\tfield: SORT_BY_VALUES_JURY.DEFAULT,\n\tisAskending: true,\n}\n\nclass Contest extends Component {\n\tstate = {\n\t\tisJuryView: false,\n\t\tisCountRejectAsZero: false,\n\t\tthreshold: undefined,\n\t\tjuryRewardPercent: undefined,\n\t\tsubmissionsSortParams: defaultSubmissionsSortParams,\n\t\tjurySortParams: defaultJurySortParams,\n\t}\n\n\tcomponentDidMount() {\n\t\ttry {\n\t\t\tthis.fetchSubmissionsInfo();\n\t\t} catch(err) {\n\t\t\tconsole.error('Fetching submissions failed: ', err);\n\n\t\t\tsetTimeout(this.fetchSubmissionsInfo, 5000);\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\ttry {\n\t\t\tconst { addressFromUrl, removedJurorsForContest } = this.props;\n\n\t\t\tif (prevProps.addressFromUrl !== addressFromUrl) {\n\t\t\t\tthis.setJuryView(false);\n\t\t\t\tthis.setState({\n\t\t\t\t\tisJuryView: false,\n\t\t\t\t\tjuryRewardPercent: undefined,\n\t\t\t\t\tsubmissionsSortParams: defaultSubmissionsSortParams,\n\t\t\t\t\tjurySortParams: defaultJurySortParams,\n\t\t\t\t});\n\t\t\t\tthis.fetchSubmissionsInfo();\n\t\t\t} else if (prevProps.removedJurorsForContest !== removedJurorsForContest) {\n\t\t\t\tthis.fetchSubmissionsInfo(true) //useCache = true;\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.error('Fetching submissions failed: ', err);\n\n\t\t\tsetTimeout(this.fetchSubmissionsInfo, 5000);\n\t\t}\n\t}\n\n\tfetchSubmissionsInfo = async (useCache = false) => {\n\t\tconst {\n\t\t\taddressFromUrl,\n\t\t\tcontestInfo: contestInfoFromRedux,\n\t\t\tsetContestInfo,\n\t\t\tsetSubmissionsInfo,\n\t\t\tsetJuryInfo,\n\t\t\thistory\n\t\t} = this.props;\n\t\tconst { jurySortParams, isCountRejectAsZero, threshold } = this.state;\n\n\t\tconst isValidAddress = await TonApi.isAddressValid(addressFromUrl);\n\n\t\tif (!isValidAddress)\n\t\t\treturn history.push('/');\n\n\t\tlet fullContestInfo = contestInfoFromRedux;\n\n\t\tif (!fullContestInfo) {\n\t\t\tfullContestInfo = await this.getContestFullInfo(addressFromUrl);\n\n\t\t\tsetContestInfo(fullContestInfo);\n\t\t}\n\n\t\tif (fullContestInfo.juryRewardPercent)\n\t\t\tthis.setJuryRewardPercent(fullContestInfo.juryRewardPercent);\n\n\t\tconst { submissionsWithStats, juryStats } = await TonApi.getContestSubmissionsAndJurors(addressFromUrl, useCache);\n\t\tconst processedSubmissions = processSubmissionsInfo(submissionsWithStats, fullContestInfo.rewards, { isCountRejectAsZero, threshold });\n\t\tconst sortedJury = sortJury(juryStats, jurySortParams.field, jurySortParams.isAskending);\n\n\t\tsetSubmissionsInfo(addressFromUrl, processedSubmissions);\n\t\tsetJuryInfo(addressFromUrl, sortedJury);\n\t}\n\n\tgetContestFullInfo = async address => {\n\t\tconst [contestInfoFromBlockchain, contestInfoFromDB] = await Promise.all([\n\t\t\tTonApi.getContestInfo(address),\n\t\t\tDatabaseApi.getContestByAddress(address)\n\t\t]);\n\t\tconst { governance } = contestInfoFromDB;\n\n\t\treturn {\n\t\t\t...contestInfoFromBlockchain,\n\t\t\t...contestInfoFromDB,\n\t\t\taddress,\n\t\t\tgovernance,\n\t\t}\n\t}\n\n\texportExcel = async () => {\n\t\tconst { contestInfo, contestSubmissions, contestJury } = this.props;\n\t\tconst { juryRewardPercent } = this.state;\n\n\t\ttry {\n\t\t\tawait exportToExcel(contestInfo, contestSubmissions, contestJury, juryRewardPercent);\n\t\t} catch(err) {\n\t\t\tconsole.error('Table export failed: ', err);\n\t\t}\n\t}\n\n\tsetJuryView = isJuryView => {\n\t\tthis.setState({ isJuryView });\n\t}\n\n\tsetJuryRewardPercent = rewardPercent => {\n\t\tthis.setState({ juryRewardPercent: rewardPercent });\n\t}\n\n\tsetIsCountRejectAsZero = isCountRejectAsZero => {\n\t\tconst { addressFromUrl, contestSubmissions, contestInfo, setSubmissionsInfo } = this.props;\n\t\tconst { threshold } = this.state;\n\n\t\tconst processedSubmissions = processSubmissionsInfo(contestSubmissions, contestInfo.rewards, { isCountRejectAsZero, threshold });\n\n\t\tthis.setState({ isCountRejectAsZero, submissionsSortParams: defaultSubmissionsSortParams });\n\t\tsetSubmissionsInfo(addressFromUrl, processedSubmissions);\n\t}\n\n\tsetThreshold = threshold => {\n\t\tconst { addressFromUrl, contestSubmissions, contestInfo, setSubmissionsInfo } = this.props;\n\t\tconst { isCountRejectAsZero } = this.state;\n\n\t\tconst processedSubmissions = processSubmissionsInfo(contestSubmissions, contestInfo.rewards, { threshold, isCountRejectAsZero });\n\n\t\tthis.setState({ threshold, submissionsSortParams: defaultSubmissionsSortParams });\n\t\tsetSubmissionsInfo(addressFromUrl, processedSubmissions);\n\t}\n\n\tsortJury = newSortField => {\n\t\tconst { contestJury, setJuryInfo, addressFromUrl } = this.props;\n\t\tconst { field, isAskending } = this.state.jurySortParams;\n\t\tconst isAskendingChange = newSortField === field;\n\n\t\tconst newSortParams = {\n\t\t\tfield: newSortField,\n\t\t\tisAskending: isAskendingChange ? !isAskending : isAskending,\n\t\t}\n\n\t\tconst sortedJury = sortJury(\n\t\t\tcontestJury,\n\t\t\tnewSortParams.field,\n\t\t\tnewSortParams.isAskending\n\t\t);\n\n\t\tsetJuryInfo(addressFromUrl, sortedJury);\n\t\tthis.setState({ jurySortParams: newSortParams });\n\t}\n\n\tsortSubmissions = newSortField => {\n\t\tconst { contestSubmissions, setSubmissionsInfo, addressFromUrl } = this.props;\n\t\tconst { field, isAskending } = this.state.submissionsSortParams;\n\t\tconst isAskendingChange = newSortField === field;\n\n\t\tconst newSortParams = {\n\t\t\tfield: newSortField,\n\t\t\tisAskending: isAskendingChange ? !isAskending : isAskending,\n\t\t}\n\n\t\tconst sortedSubmissions = sortSubmissions(\n\t\t\tcontestSubmissions,\n\t\t\tnewSortParams.field,\n\t\t\tnewSortParams.isAskending\n\t\t);\n\n\t\tsetSubmissionsInfo(addressFromUrl, sortedSubmissions);\n\t\tthis.setState({ submissionsSortParams: newSortParams });\n\t}\n\n\trender() {\n\t\tconst { contestSubmissions, contestInfo, contestJury, addressFromUrl } = this.props;\n\t\tconst { isJuryView, juryRewardPercent, submissionsSortParams, jurySortParams, isCountRejectAsZero, threshold } = this.state;\n\t\tconst hasSubmissions = !!contestSubmissions?.length;\n\t\tconst shouldShowEmpty = (isJuryView && contestJury && !Object.keys(contestJury).length)\n\t\t\t|| (!isJuryView && !hasSubmissions);\n\t\tconst shouldShowLoader = !contestInfo || !contestSubmissions || !contestJury;\n\n\t\treturn (\n\t\t\t<div className='contest'>\n\t\t\t\t{contestInfo\n\t\t\t\t\t&& <ContestHeader\n\t\t\t\t\t\tcontestInfo={contestInfo}\n\t\t\t\t\t\tisJuryView={isJuryView}\n\t\t\t\t\t\tjuryRewardPercent={juryRewardPercent}\n\t\t\t\t\t\tsetJuryView={this.setJuryView}\n\t\t\t\t\t\tsetJuryRewardPercent={this.setJuryRewardPercent}\n\t\t\t\t\t\texportExcel={this.exportExcel}\n\t\t\t\t\t\tisControlsVisible={hasSubmissions}\n\t\t\t\t\t\tisCountRejectAsZero={isCountRejectAsZero}\n\t\t\t\t\t\tsetIsCountRejectAsZero={this.setIsCountRejectAsZero}\n\t\t\t\t\t\tthreshold={threshold}\n\t\t\t\t\t\tsetThreshold={this.setThreshold}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{(hasSubmissions && !shouldShowEmpty)\n\t\t\t\t\t&& <div className='contest-table-wrapper'>\n\t\t\t\t\t\t<table className='contest-table'>\n\t\t\t\t\t\t\t<ContestTableHeader\n\t\t\t\t\t\t\t\tcontestInfo={contestInfo}\n\t\t\t\t\t\t\t\tisJuryView={isJuryView}\n\t\t\t\t\t\t\t\tsubmissionsSortParams={submissionsSortParams}\n\t\t\t\t\t\t\t\tjurySortParams={jurySortParams}\n\t\t\t\t\t\t\t\tsortSubmissions={this.sortSubmissions}\n\t\t\t\t\t\t\t\tsortJury={this.sortJury}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ContestTableBody\n\t\t\t\t\t\t\t\tcontestSubmissions={contestSubmissions}\n\t\t\t\t\t\t\t\tcontestJury={contestJury}\n\t\t\t\t\t\t\t\tcontestAddress={addressFromUrl}\n\t\t\t\t\t\t\t\tisJuryView={isJuryView}\n\t\t\t\t\t\t\t\tjuryRewardPercent={juryRewardPercent}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{shouldShowLoader && <Loader />}\n\t\t\t\t{(!shouldShowLoader && shouldShowEmpty) && <Loader isFailed/>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ contest }, { location }) => {\n\tconst { contestsInfo, submissionsInfo, jurorsInfo, removedJurors } = contest;\n\n\tconst searchString = location.search;\n\tconst searchParams = new URLSearchParams(searchString);\n\tconst addressFromUrl = searchParams.get('contestAddress');\n\tconst contestInfo = contestsInfo[addressFromUrl];\n\tconst contestSubmissions = submissionsInfo[addressFromUrl];\n\tconst contestJury = jurorsInfo[addressFromUrl];\n\tconst removedJurorsForContest = removedJurors[addressFromUrl];\n\n\treturn {\n\t\tcontestInfo,\n\t\tcontestSubmissions,\n\t\tcontestJury,\n\t\tremovedJurorsForContest,\n\t\taddressFromUrl,\n\t}\n};\n\nconst ContestWithRedux = connect(mapStateToProps, {\n\tsetContestInfo,\n\tsetSubmissionsInfo,\n\tsetJuryInfo,\n})(Contest);\n\nexport default withRouter(ContestWithRedux);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUTCDate, createContestUrl } from 'src/helpers';\n\nconst getDatePartToShow = contest => {\n\tconst now = Date.now();\n\tconst isUnderway = now < contest.contestDeadline * 1000;\n\tconst isVoting = now > contest.contestDeadline * 1000 && now < contest.votingDeadline * 1000;\n\tconst contestDateToOperate = isUnderway\n\t\t? getUTCDate(new Date(contest.contestDeadline * 1000))\n\t\t: getUTCDate(new Date(contest.votingDeadline * 1000));\n\n\tconst endedAtStr = contestDateToOperate.toLocaleDateString('en-US', { month: 'long', day: 'numeric' });\n\tconst yearStr = contestDateToOperate.toLocaleDateString('en-US', { year: 'numeric' });\n\tconst timeStr = contestDateToOperate.toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit' });\n\n\tif (isUnderway) {\n\t\treturn (<><span className='contests-list__item-date--underway'>Underway</span> until {endedAtStr}, {yearStr}, {timeStr} UTC</>)\n\t}\n\n\tif (isVoting) {\n\t\treturn (<><span className='contests-list__item-date--voting'>Voting</span> until {endedAtStr}, {yearStr}, {timeStr} UTC</>)\n\t}\n\n\treturn (<><span className='contests-list__item-date--ended'>Ended</span> {endedAtStr}, {yearStr}, {timeStr} UTC</>)\n}\n\nconst ListItem = ({ contest, isGrey }) => {\n\tconst datePart = getDatePartToShow(contest);\n\tconst linkAddress = createContestUrl(contest.address);\n\tconst listItemClassName = `contests-list__item ${isGrey ? 'contests-list__item--grey' : ''}`;\n\n\treturn (\n\t\t<Link to={linkAddress} className={listItemClassName}>\n\t\t\t<div className='contests-list__item-title'>\n\t\t\t\t{contest.title}\n\t\t\t</div>\n\t\t\t<div className='contests-list__item-date'>\n\t\t\t\t{datePart}\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n\nexport default ListItem;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setSelectedSubgov } from 'src/store/actions/common';\nimport { OptionsList } from 'src/components';\n\nconst SubgovSwitcher = ({ governances, selectedGovernance }) => {\n\tconst dispatch = useDispatch();\n\n\tconst governancesToRender = governances\n\t\t.filter(gov => gov.name !== selectedGovernance.name)\n\t\t.map(gov => (\n\t\t\t<div\n\t\t\t\tclassName='options-list__list-item'\n\t\t\t\tonClick={() => dispatch(setSelectedSubgov(gov))}\n\t\t\t\tkey={gov.name}\n\t\t\t>\n\t\t\t\t{gov.fullName}\n\t\t\t</div>\n\t\t));\n\n\tconst selectedItem = `Subgov: ${selectedGovernance.fullName}`;\n\n\treturn (\n\t\t<div className='subgov-switcher'>\n\t\t\t<div className='subgov-switcher__title'>Contests</div>\n\t\t\t<OptionsList selectedItem={selectedItem}>\n\t\t\t\t{governancesToRender}\n\t\t\t</OptionsList>\n\t\t</div>\n\t);\n}\n\nexport default SubgovSwitcher;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DatabaseApi, TonApi } from 'src/api';\nimport { setBulkContestsInfo } from 'src/store/actions/contest';\nimport { Loader } from 'src/components'; \nimport ContestListItem from './ListItem';\nimport SubgovSwitcher from './SubgovSwitcher';\nimport './index.scss';\n\nclass ContestsList extends Component {\n\tstate = {\n\t\tgovernances: [],\n\t\tisLoaderVisible: false,\n\t}\n\n\tasync componentDidMount() {\n\t\ttry {\n\t\t\tconst { contestsInfo } = this.props;\n\n\t\t\tif (!contestsInfo || contestsInfo.length <= 1)\n\t\t\t\tthis.setState({ isLoaderVisible: true });\n\n\t\t\tawait this.fetchGovernances();\n\t\t\tawait this.fetchContests();\n\t\t} catch(err) {\n\t\t\tconsole.error('Fetching contests failed: ', err);\n\n\t\t\tsetTimeout(async () => {\n\t\t\t\tawait this.fetchGovernances();\n\t\t\t\tawait this.fetchContests();\n\t\t\t}, 5000);\n\t\t}\n\t}\n\n\tasync componentDidUpdate(prevProps) {\n\t\ttry {\n\t\t\tif (prevProps.selectedGovernance.name !== this.props.selectedGovernance.name) {\n\t\t\t\tthis.setState({ isLoaderVisible: true });\n\t\t\t\tawait this.fetchContests();\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.error('Fetching contests failed: ', err);\n\n\t\t\tsetTimeout(this.fetchContests, 5000);\n\t\t}\n\t}\n\n\tfetchGovernances = async () => {\n\t\tconst governances = await DatabaseApi.getGovernances();\n\n\t\tthis.setState({ governances });\n\t}\n\n\tfetchContests = async () => {\n\t\tconst { setBulkContestsInfo, selectedGovernance } = this.props;\n\n\t\tthis.lastSelectedGovernance = selectedGovernance.name;\n\n\t\tconst contestsFromDB = await DatabaseApi.getContests({ governance: selectedGovernance.name });\n\t\tconst contestsWithFullInfo = await Promise.all(\n\t\t\tcontestsFromDB.items.map(contest => this.getContestFullInfo(contest))\n\t\t);\n\n\t\tif (this.lastSelectedGovernance === selectedGovernance.name) {\n\t\t\tsetBulkContestsInfo(contestsWithFullInfo);\n\t\t\tthis.setState({ isLoaderVisible: false });\n\t\t}\n\t}\n\n\tgetContestFullInfo = async contestFromDB => {\n\t\tconst { address, governance, ...rest } = contestFromDB.fields;\n\t\tconst contestInfoFromBlockchain = await TonApi.getContestInfo(address);\n\n\t\treturn {\n\t\t\t...contestInfoFromBlockchain,\n\t\t\t...rest,\n\t\t\taddress,\n\t\t\tgovernance: governance.fields.name,\n\t\t}\n\t}\n\n\trenderContestItems = () => {\n\t\tconst { contestsInfo } = this.props;\n\t\tconst contestItems = contestsInfo.map((contest, index) => (\n\t\t\t<ContestListItem\n\t\t\t\tisGrey={index % 2 === 0 || index === 0}\n\t\t\t\tcontest={contest}\n\t\t\t\tkey={contest.address}\n\t\t\t/>\n\t\t));\n\n\t\treturn contestItems;\n\t}\n\n\trender() {\n\t\tconst { contestsInfo, selectedGovernance } = this.props;\n\t\tconst { governances, isLoaderVisible } = this.state;\n\n\t\treturn (\n\t\t\t<div className='contests-list'>\n\t\t\t\t<SubgovSwitcher\n\t\t\t\t\tgovernances={governances}\n\t\t\t\t\tselectedGovernance={selectedGovernance}\n\t\t\t\t/>\n\t\t\t\t{isLoaderVisible\n\t\t\t\t\t? <Loader />\n\t\t\t\t\t: contestsInfo?.length\n\t\t\t\t\t\t? this.renderContestItems()\n\t\t\t\t\t\t: <Loader isFailed />\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ contest, common }) => {\n\tconst { contestsInfo } = contest;\n\tconst { selectedGovernance } = common;\n\n\treturn {\n\t\tcontestsInfo: Object.values(contestsInfo),\n\t\tselectedGovernance,\n\t}\n};\n\nexport default connect(mapStateToProps, {\n\tsetBulkContestsInfo,\n})(ContestsList);\n","import React from 'react';\nimport './index.scss';\n\nconst Loader = ({ isFailed }) => {\n\tconst imgSrc = isFailed ? '/load-failed.png' : '/loader.gif';\n\tconst imgAlt = isFailed ? 'Nothing here :(' : 'Loading...';\n\n\treturn (\n\t\t<div className='loader'>\n\t\t\t<img className='loader__cat' src={imgSrc} alt={imgAlt} />\n\t\t</div>\n\t);\n}\n\nexport default Loader;\n","import React, { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setIsTutorialActive } from 'src/store/actions/common';\nimport { MAIN_GOV_LINK } from 'src/constants';\nimport { CancelIcon } from 'src/components/icons';\nimport './index.scss';\n\nconst TutorialPopup = () => {\n\tconst wrapperRef = useRef(null);\n\tconst dispatch = useDispatch();\n\n\tconst handleClickOutside = e => {\n\t\tif (wrapperRef && e.target === wrapperRef.current) {\n\t\t\tdispatch(setIsTutorialActive(false));\n\t\t}\n\t}\n\n\treturn (\n\t\t<div ref={wrapperRef} className='tutorial-popup' onClick={handleClickOutside}>\n\t\t\t<div className='tutorial-popup__container'>\n\t\t\t\t<CancelIcon onClick={() => dispatch(setIsTutorialActive(false))} />\n\t\t\t\t<div className='tutorial-popup__header'>\n\t\t\t\t\tWhere to find contest address?\n\t\t\t\t</div>\n\t\t\t\t<ol>\n\t\t\t\t\t<li className='tutorial-popup__list-item'>\n\t\t\t\t\t\tGo to <a href={MAIN_GOV_LINK} target='_blank' rel=\"noreferrer\">https://gov.freeton.org</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className='tutorial-popup__list-item'>\n\t\t\t\t\t\tFind a contest you want to check\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className='tutorial-popup__list-item'>\n\t\t\t\t\t\tClick here to copy the contest address\n\t\t\t\t\t\t<img src='/tutorial-1.jpg' alt='' />\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className='tutorial-popup__list-item' style={{ marginBottom: 0 }}>\n\t\t\t\t\t\tPaste contest address into the search bar\n\t\t\t\t\t\t<img src='/tutorial-2.jpg' alt='' />\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className='tutorial-popup__list-item'>\n\t\t\t\t\t\tHit Enter or click on the search icon\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className='tutorial-popup__list-item'>\n\t\t\t\t\t\tGreat! You are amazing!\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default TutorialPopup;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { ArrowIcon } from 'src/components/icons';\nimport './index.scss';\n\nconst DEFAULT_HEIGHT = 252;\nconst DEFAULT_WIDTH = 245;\n\nconst OptionsList = ({ children, selectedItem, height = DEFAULT_HEIGHT, width = DEFAULT_WIDTH, isDisabled }) => {\n\tconst switcherBlockRef = useRef(null);\n\tconst listRef = useRef(null);\n\tconst [isListOpen, setIsListOpen] = useState(false);\n\n\tconst handleClickOutside = useCallback(event => {\n\t\tif (!switcherBlockRef?.current?.contains(event.target) && isListOpen)\n\t\t\tsetIsListOpen(false);\n\t}, [isListOpen]);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', handleClickOutside);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', handleClickOutside);\n\t\t}\n\t}, [handleClickOutside]);\n\n\tconst handleClickOnSwitcherBlock = event => {\n\t\tif (isDisabled || listRef?.current?.contains(event.target))\n\t\t\treturn;\n\t\t\n\t\tsetIsListOpen(!isListOpen)\n\t};\n\n\tconst listClassName = `options-list__list ${isListOpen\n\t\t? 'options-list__list--visible' : ''\n\t}`;\n\n\tconst switcherBlockClassName = `options-list ${isListOpen\n\t\t? 'options-list--active' : ''\n\t} ${isDisabled ? 'options-list--disabled' : ''}`;\n\n\treturn (\n\t\t<div\n\t\t\tref={switcherBlockRef}\n\t\t\tonClick={handleClickOnSwitcherBlock}\n\t\t\tclassName={switcherBlockClassName}\n\t\t\tstyle={{ '--width': `${width}px` }}\n\t\t>\n\t\t\t{selectedItem}\n\t\t\t<ArrowIcon />\n\t\t\t<div\n\t\t\t\tref={listRef}\n\t\t\t\tclassName={listClassName}\n\t\t\t\tstyle={{ '--height': `${height}px` }}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default OptionsList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\nimport { TonApi, DatabaseApi } from 'src/api';\nimport store from 'src/store'\nimport { App } from 'src/components';\n\nimport 'src/styles/index.scss';\n\nrequire('dotenv').config();\n\nTonApi.init();\nDatabaseApi.init();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n","export const SET_SELECTED_SUBGOV = 'common/SET_SELECTED_SUBGOV';\nexport const SET_IS_TUTORIAL_ACTIVE = 'common/SET_IS_TUTORIAL_ACTIVE';\n\nexport const setSelectedSubgov = selectedSubgov => dispatch => {\n\tdispatch({\n\t\ttype: SET_SELECTED_SUBGOV,\n\t\tpayload: selectedSubgov\n\t})\n}\n\nexport const setIsTutorialActive = isActive => dispatch => {\n\tdispatch({\n\t\ttype: SET_IS_TUTORIAL_ACTIVE,\n\t\tpayload: isActive,\n\t})\n}\n","import {\n\tSET_CONTEST_INFO,\n\tSET_BULK_CONTESTS_INFO,\n\tADD_BULK_CONTESTS_INFO,\n\tSET_SUBMISSIONS_INFO,\n\tSET_JURY_INFO,\n\tSET_REMOVED_JUROR,\n\tUPDATE_SUBMISSION_REWARD,\n} from '../actions/contest';\n\nconst initialState = {\n\tcontestsInfo: {},\n\tsubmissionsInfo: {},\n\tjurorsInfo: {},\n\tremovedJurors: {},\n}\n  \nfunction contestReducer(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_CONTEST_INFO: {\n\t\t\tconst contestsInfo = { ...state.contestsInfo };\n\t\t\tcontestsInfo[payload.address] = payload;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontestsInfo,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_BULK_CONTESTS_INFO: {\n\t\t\tconst contestsInfo = {};\n\n\t\t\tpayload.forEach(contest => {\n\t\t\t\tcontestsInfo[contest.address] = contest;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontestsInfo,\n\t\t\t}\n\t\t}\n\n\t\tcase ADD_BULK_CONTESTS_INFO: {\n\t\t\tconst contestsInfo = { ...state.contestsInfo };\n\n\t\t\tpayload.forEach(contest => {\n\t\t\t\tcontestsInfo[contest.address] = contest;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontestsInfo,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_SUBMISSIONS_INFO: {\n\t\t\tconst { address, submissions } = payload;\n\n\t\t\tconst submissionsInfo = { ...state.submissionsInfo };\n\t\t\tsubmissionsInfo[address] = submissions;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsubmissionsInfo,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_JURY_INFO: {\n\t\t\tconst { address, juryStats } = payload;\n\n\t\t\tconst jurorsInfo = { ...state.jurorsInfo };\n\t\t\tjurorsInfo[address] = juryStats;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tjurorsInfo,\n\t\t\t}\n\t\t}\n\n\t\tcase UPDATE_SUBMISSION_REWARD: {\n\t\t\tconst { contestAddress, submissionId, reward } = payload;\n\n\t\t\tconst newSubmissionsInfo = { ...state.submissionsInfo };\n\t\t\tconst contestSubmissions = newSubmissionsInfo[contestAddress];\n\t\t\tconst updatedContestSubmissions = contestSubmissions.map(subm => {\n\t\t\t\tif (subm.id === submissionId)\n\t\t\t\t\treturn { ...subm, reward }\n\t\t\t\t\n\t\t\t\treturn subm;\n\t\t\t});\n\t\t\tnewSubmissionsInfo[contestAddress] = updatedContestSubmissions;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsubmissionsInfo: newSubmissionsInfo,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_REMOVED_JUROR: {\n\t\t\tconst { address, juryAddr } = payload\n\n\t\t\tconst removedJurorsForContest = [ ...(state.removedJurors[address] || []) ];\n\n\t\t\tremovedJurorsForContest.push(juryAddr);\n\n\t\t\tconst newRemovedJurors = {\n\t\t\t\t...state.removedJurors,\n\t\t\t\t[address]: removedJurorsForContest,\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tremovedJurors: newRemovedJurors,\n\t\t\t}\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default contestReducer\n","import {\n\tSET_SELECTED_SUBGOV,\n\tSET_IS_TUTORIAL_ACTIVE,\n} from '../actions/common';\nimport { DEFAULT_GOVERNANCE } from 'src/constants';\n\nconst initialState = {\n\tselectedGovernance: {\n\t\tname: DEFAULT_GOVERNANCE.NAME,\n\t\tfullName: DEFAULT_GOVERNANCE.FULL_NAME\n\t},\n\tisTutorialActive: false,\n}\n  \nfunction commonReducer(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_SELECTED_SUBGOV: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedGovernance: payload || initialState.selectedGovernance,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_IS_TUTORIAL_ACTIVE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisTutorialActive: payload,\n\t\t\t}\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default commonReducer\n","import { combineReducers } from 'redux';\nimport contest from './contest';\nimport common from './common';\n\nconst rootReducer = combineReducers({\n\tcontest,\n\tcommon\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n\tthunk,\n];\n\nif (process.env.NODE_ENV === 'development') {\n\tconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n\tif (typeof devToolsExtension === 'function')\n\t\tenhancers.push(devToolsExtension());\n}\n\nconst composedEnhancers = compose(\n\tapplyMiddleware(...middleware),\n\t...enhancers,\n);\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\tcomposedEnhancers,\n);\n\nexport default store;\n","const EMPTY_ADDRESS = '0:0000000000000000000000000000000000000000000000000000000000000000';\n\nconst EXPLORER_BASE_URL = 'https://ton.live/accounts/accountDetails?id=';\n\nconst MAIN_GOV_LINK = 'https://gov.freeton.org/';\n\nconst REWARD_TRIGGER_FOR_INPUT = -1;\n\nconst DEFAULT_GOVERNANCE = {\n\tNAME: 'main',\n\tFULL_NAME: 'Main',\n}\n\nconst SORT_BY_VALUES_PARTICIPANTS = {\n\tDEFAULT: 'place',\n\tPLACE: 'place',\n\tREWARD: 'reward',\n\tSUBMISSION_ID: 'id',\n\tSCORE: 'score',\n\tACCEPTED: 'acceptAmount',\n\tREJECTED: 'rejectAmount',\n}\n\nconst SORT_BY_VALUES_JURY = {\n\tDEFAULT: 'id',\n\tREWARD: 'reward',\n\tJURY_ID: 'id',\n\tTOTAL_VOTES: 'totalVotes',\n\tACCEPTED: 'acceptAmount',\n\tABSTAINED: 'abstainAmount',\n\tREJECTED: 'rejectAmount',\n}\n\nconst DB_CONTENT_TYPES = {\n\tCONTEST: 'contest',\n\tGOVERNANCE: 'governance',\n}\n\nmodule.exports = {\n\tSORT_BY_VALUES_PARTICIPANTS,\n\tSORT_BY_VALUES_JURY,\n\tEMPTY_ADDRESS,\n\tEXPLORER_BASE_URL,\n\tDB_CONTENT_TYPES,\n\tDEFAULT_GOVERNANCE,\n\tREWARD_TRIGGER_FOR_INPUT,\n\tMAIN_GOV_LINK,\n}\n","const contestAbi = {\n\t'ABI version': 2,\n\t'header': ['pubkey', 'time'],\n\t'functions': [\n\t\t{\n\t\t\t'name': 'constructor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'title', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'link', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'hash', 'type': 'uint256' },\n\t\t\t\t{ 'name': 'juryAddr', 'type': 'address' },\n\t\t\t\t{ 'name': 'juryKeys', 'type': 'uint256[]' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'setupContest',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'startsIn', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'lastsFor', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'setupJurors',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'jurors', 'type': 'address[]' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'rejectApplicant',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'submitWithContact',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'participant', 'type': 'address' },\n\t\t\t\t{ 'name': 'forumLink', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'fileLink', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'hash', 'type': 'uint256' },\n\t\t\t\t{ 'name': 'contact', 'type': 'address' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'submit',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'participant', 'type': 'address' },\n\t\t\t\t{ 'name': 'forumLink', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'fileLink', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'hash', 'type': 'uint256' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'openContest',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'closeContest',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'openVoting',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'closeVoting',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'rejectVote',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'voteFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'mark', 'type': 'uint32' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'voteForCommented',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'mark', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'comment', 'type': 'bytes' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'abstain',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'comment', 'type': 'bytes' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'voteAgainst',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'comment', 'type': 'bytes' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'finalizeResults',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'votingEndsIn',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'daysLeft', 'type': 'uint64' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'contestStartCountdown',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'secondsLeft', 'type': 'int64' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'contestCountdown',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'secondsLeft', 'type': 'int64' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'votingCountdown',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'secondsLeft', 'type': 'int64' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getId',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'addr', 'type': 'address' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'value0', 'type': 'uint16' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'listContenders',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'ids', 'type': 'uint16[]' },\n\t\t\t\t{ 'name': 'addresses', 'type': 'address[]' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getStatsFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'totalPoints', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'avgHi', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'avgLo', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'jurorsVoted', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'accepted', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'abstained', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'rejected', 'type': 'uint16' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getVotesPerJuror',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'jurorsFor', 'type': 'address[]' },\n\t\t\t\t{ 'name': 'marks', 'type': 'uint32[]' },\n\t\t\t\t{ 'name': 'commentsFor', 'type': 'bytes[]' },\n\t\t\t\t{ 'name': 'jurorsAbstained', 'type': 'address[]' },\n\t\t\t\t{ 'name': 'commentsAbstained', 'type': 'bytes[]' },\n\t\t\t\t{ 'name': 'jurorsAgainst', 'type': 'address[]' },\n\t\t\t\t{ 'name': 'commentsAgainst', 'type': 'bytes[]' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getJuryStats',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'components': [{ 'name': 'id', 'type': 'uint16' }, { 'name': 'addr', 'type': 'address' }], 'name': 'jury', 'type': 'map(uint256,tuple)' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getContestStats',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'totalScore', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'avgHi', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'avgLo', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'jurorsVoted', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'entries', 'type': 'uint16' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getContestInfo',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'title', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'link', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'hash', 'type': 'uint256' },\n\t\t\t\t{ 'name': 'juryAddr', 'type': 'address' },\n\t\t\t\t{ 'name': 'juryKeys', 'type': 'uint256[]' },\n\t\t\t\t{ 'name': 'juryAddresses', 'type': 'address[]' },\n\t\t\t\t{ 'name': 'maxVotingAttempts', 'type': 'uint8' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getContestProgress',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'votesCount', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'contendersCount', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'contestOpen', 'type': 'bool' },\n\t\t\t\t{ 'name': 'votingOpen', 'type': 'bool' },\n\t\t\t\t{ 'name': 'contestDeadline', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'votingDeadline', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'resultsFinalized', 'type': 'bool' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getInfoFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'addr', 'type': 'address' },\n\t\t\t\t{ 'name': 'forumLink', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'fileLink', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'hash', 'type': 'uint256' },\n\t\t\t\t{ 'name': 'appliedAt', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'contact', 'type': 'address' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getContendersInfo',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'ids', 'type': 'uint16[]' },\n\t\t\t\t{ 'name': 'addrs', 'type': 'address[]' },\n\t\t\t\t{ 'name': 'forumLinks', 'type': 'bytes[]' },\n\t\t\t\t{ 'name': 'fileLinks', 'type': 'bytes[]' },\n\t\t\t\t{ 'name': 'hashes', 'type': 'uint256[]' },\n\t\t\t\t{ 'name': 'appliedAts', 'type': 'uint64[]' },\n\t\t\t\t{ 'name': 'contacts', 'type': 'address[]' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getVotes',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'votes', 'type': 'uint64' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getVotesFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'votes', 'type': 'uint16' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getTotalRatingFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'rating', 'type': 'uint64' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'resultsFinalized',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'flag', 'type': 'bool' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getFinalStatusFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'status', 'type': 'bool' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getFinalStatus',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'status', 'type': 'bool[]' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getFinalContestStats',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'totalScore', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'avgHi', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'avgLo', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'jurorsVoted', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'entries', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'passed', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'rejected', 'type': 'uint16' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getFinalStatsFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'status', 'type': 'bool' },\n\t\t\t\t{ 'name': 'totalPoints', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'avgHi', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'avgLo', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'jurorsVoted', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'accepted', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'abstained', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'rejected', 'type': 'uint16' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getFinalVotingData',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'ids', 'type': 'uint16[]' },\n\t\t\t\t{ 'name': 'juryAddresses', 'type': 'address[]' },\n\t\t\t\t{ 'name': 'statuses', 'type': 'bool[]' },\n\t\t\t\t{ 'name': 'totalRatings', 'type': 'uint64[]' },\n\t\t\t\t{ 'name': 'jurorsVoted', 'type': 'uint16[]' },\n\t\t\t\t{ 'name': 'votesFor', 'type': 'uint16[]' },\n\t\t\t\t{ 'name': 'votesAbstained', 'type': 'uint16[]' },\n\t\t\t\t{ 'name': 'votesAgainst', 'type': 'uint16[]' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'transfer',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'dest', 'type': 'address' },\n\t\t\t\t{ 'name': 'value', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'bounce', 'type': 'bool' },\n\t\t\t\t{ 'name': 'flags', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'forceContest',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'flag', 'type': 'bool' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'forceVoting',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'flag', 'type': 'bool' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'forceFinalize',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'flag', 'type': 'bool' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'setContestDeadline',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'time', 'type': 'uint64' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'setVotingDeadline',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'time', 'type': 'uint64' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'upgrade',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'c', 'type': 'cell' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t],\n\t'data': [\n\t\t{ 'key': 1, 'name': 'debugNonce', 'type': 'uint256' },\n\t],\n\t'events': [\n\t],\n};\n\nexport default contestAbi;\n","import store from 'src/store';\nimport { TonClient } from '@tonclient/core';\nimport { libWeb } from '@tonclient/lib-web';\n\nimport contestAbi from 'src/contest.abi';\n\nclass TonApi {\n\tconstructor() {\n\t\tthis.bocCache = new Map();\n\t\tthis.votesPerJurorCache = {};\n\t}\n\n\tinit() {\n\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\t\tTonClient.useBinaryLibrary(libWeb);\n\n\t\tthis.client = new TonClient({\n\t\t\tnetwork: {\n\t\t\t\tendpoints: [\n\t\t\t\t\t\"eri01.main.everos.dev\",\n\t\t\t\t\t\"gra01.main.everos.dev\",\n\t\t\t\t\t\"gra02.main.everos.dev\",\n\t\t\t\t\t\"lim01.main.everos.dev\",\n\t\t\t\t\t\"rbx01.main.everos.dev\",\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n\n\tasync getContestSubmissionsAndJurors(contestAddress, useCache = false) {\n\t\tif (!contestAddress)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tconst contendersInfo = await this.runContestFunction(contestAddress, 'getContendersInfo');\n\n\t\t\tconst submissions = contendersInfo.ids.map((id, index) => {\n\t\t\t\tconst createdAtTimestamp = parseInt(contendersInfo.appliedAts[index].substr(0, 10), 10);\n\t\t\t\tconst createdAtDate = new Date(createdAtTimestamp * 1000);\n\n\t\t\t\treturn {\n\t\t\t\t\tid: parseInt(id, 10),\n\t\t\t\t\ttitle: `Submission ${parseInt(id, 10)}`,\n\t\t\t\t\tparticipantAddress: contendersInfo.addrs[index],\n\t\t\t\t\tdiscussionLink: Buffer.from(contendersInfo.forumLinks[index], 'hex').toString(),\n\t\t\t\t\tfileLink: Buffer.from(contendersInfo.fileLinks[index], 'hex').toString(),\n\t\t\t\t\thash: contendersInfo.hashes[index],\n\t\t\t\t\tcreatedAt: createdAtDate,\n\t\t\t\t\tcreatedAtTimestamp,\n\t\t\t\t\tcontactAddress: contendersInfo.contacts[index],\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst juryStats = {};\n\t\t\tconst submissionsWithStats = await Promise.all(\n\t\t\t\tsubmissions.map(async subm => { \n\t\t\t\t\tconst { removedJurors } = store.getState().contest;\n\t\t\t\t\tconst removedJurorsForContest = removedJurors[contestAddress] || [];\n\t\t\t\t\tconst votesPerJuror = await this.getVotesPerJurorForSubmission(contestAddress, subm.id, useCache);\n\t\t\t\t\tconst {\n\t\t\t\t\t\tjurorsFor,\n\t\t\t\t\t\tjurorsAbstained,\n\t\t\t\t\t\tjurorsAgainst,\n\t\t\t\t\t\tmarks,\n\t\t\t\t\t} = votesPerJuror;\n\n\t\t\t\t\tconst jurorsForArr = [];\n\t\t\t\t\tconst marksObj = marks.reduce((acc, mark, index) => {\n\t\t\t\t\t\tconst juryAddr = jurorsFor[index];\n\n\t\t\t\t\t\tif (removedJurorsForContest.includes(juryAddr))\n\t\t\t\t\t\t\treturn acc;\n\n\t\t\t\t\t\tjurorsForArr.push(juryAddr);\n\n\t\t\t\t\t\treturn [...acc, { mark, juryAddr }];\n\t\t\t\t\t}, []);\n\n\t\t\t\t\tconst jurorsAbstainedArr = jurorsAbstained.filter(jury => !removedJurorsForContest.includes(jury));\n\t\t\t\t\tconst jurorsRejectArr = jurorsAgainst.filter(jury => !removedJurorsForContest.includes(jury));\n\n\t\t\t\t\tconst sumbStats = {\n\t\t\t\t\t\tmarks: marksObj,\n\t\t\t\t\t\tjurorsAbstained: jurorsAbstainedArr,\n\t\t\t\t\t\tjurorsReject: jurorsRejectArr,\n\t\t\t\t\t\tabstainAmount: jurorsAbstainedArr.length,\n\t\t\t\t\t\trejectAmount: jurorsRejectArr.length,\n\t\t\t\t\t};\n\n\t\t\t\t\tfunction updateJurorsStatFromCollection(collection, stat) {\n\t\t\t\t\t\tcollection.forEach((address) => {\n\t\t\t\t\t\t\tif (juryStats[address]) {\n\t\t\t\t\t\t\t\tjuryStats[address][stat] = (juryStats[address][stat] || 0) + 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjuryStats[address] = {\n\t\t\t\t\t\t\t\t\t[stat]: 1,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tupdateJurorsStatFromCollection(jurorsForArr, 'acceptAmount');\n\t\t\t\t\tupdateJurorsStatFromCollection(jurorsAbstainedArr, 'abstainAmount');\n\t\t\t\t\tupdateJurorsStatFromCollection(jurorsRejectArr, 'rejectAmount');\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...subm,\n\t\t\t\t\t\t...sumbStats,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tlet counter = 1;\n\t\t\tfor (const address in juryStats) {\n\t\t\t\tjuryStats[address].id = counter;\n\t\t\t\tcounter++;\n\t\t\t}\n\n\t\t\treturn { submissionsWithStats, juryStats };\n\t\t} catch(err) {\n\t\t\tconsole.error('Getting contest submissions failed: ', err);\n\n\t\t\treturn { submissionsWithStats: [], juryStats: {} };\n\t\t}\n\t}\n\n\tasync getVotesPerJurorForSubmission(contestAddress, submId, useCache) {\n\t\tif (!contestAddress || !submId)\n\t\t\treturn;\n\t\t\n\t\tif (useCache && this.votesPerJurorCache[contestAddress]?.has(submId))\n\t\t\treturn this.votesPerJurorCache[contestAddress].get(submId);\n\n\t\tconst votesPerJuror = await this.runContestFunction(\n\t\t\tcontestAddress,\n\t\t\t'getVotesPerJuror',\n\t\t\t{ id: submId },\n\t\t);\n\n\t\tif (this.votesPerJurorCache[contestAddress]) {\n\t\t\tthis.votesPerJurorCache[contestAddress].set(submId, votesPerJuror);\n\t\t} else {\n\t\t\tthis.votesPerJurorCache[contestAddress] = new Map([[submId, votesPerJuror]]);\n\t\t}\n\n\t\treturn votesPerJuror;\n\t}\n\n\tasync getContestInfo(contestAddress) {\n\t\ttry {\n\t\t\tconst infoAndProgress = await Promise.all([\n\t\t\t\tthis.runContestFunction(contestAddress, 'getContestInfo'),\n\t\t\t\tthis.runContestFunction(contestAddress, 'getContestProgress'),\n\t\t\t]);\n\t\t\tconst [contestInfo, contestProgress] = infoAndProgress;\n\n\t\t\tconst link = Buffer.from(contestInfo.link, 'hex').toString();\n\t\t\tconst title = Buffer.from(contestInfo.title, 'hex').toString();\n\t\n\t\t\treturn {\n\t\t\t\t...contestInfo,\n\t\t\t\t...contestProgress,\n\t\t\t\tlink,\n\t\t\t\ttitle,\n\t\t\t};\n\t\t} catch(err) {\n\t\t\tconsole.error('Getting full contest info failed:', err);\n\t\t}\n\t}\n\n\tasync isAddressValid(address) {\n\t\ttry {\n\t\t\tconst result = await this.client.utils.convert_address({\n\t\t\t\taddress,\n\t\t\t\toutput_format: {\n\t\t\t\t\ttype: 'Hex',\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn !!result;\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tasync runContestFunction(contestAddress, functionName, functionInput) {\n\t\ttry {\n\t\t\tlet boc;\n\n\t\t\tif (this.bocCache.has(contestAddress)) {\n\t\t\t\tboc = this.bocCache.get(contestAddress);\n\t\t\t} else {\n\t\t\t\tconst params = {\n\t\t\t\t\tcollection: 'accounts',\n\t\t\t\t\tfilter: {\n\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\teq: contestAddress,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tresult: 'id, boc',\n\t\t\t\t};\n\t\t\n\t\t\t\tconst res = await this.client.net.wait_for_collection(params);\n\t\n\t\t\t\tboc = res.result.boc;\n\t\t\t\tthis.bocCache.set(contestAddress, boc);\n\t\t\t}\n\n\t\t\tconst apiMessageParams = {\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: contestAbi,\n\t\t\t\t},\n\t\t\t\taddress: contestAddress,\n\t\t\t\tcall_set: {\n\t\t\t\t\tfunction_name: functionName,\n\t\t\t\t},\n\t\t\t\tsigner: {\n\t\t\t\t\ttype: 'None',\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tif (functionInput)\n\t\t\t\tapiMessageParams.call_set.input = functionInput;\n\t\n\t\t\tconst abiMessage = await this.client.abi.encode_message(apiMessageParams);\n\t\n\t\t\tconst contestFunctionRes = await this.client.tvm.run_tvm({\n\t\t\t\tmessage: abiMessage.message,\n\t\t\t\taccount: boc,\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: contestAbi,\n\t\t\t\t},\n\t\t\t});\n\t\n\t\t\treturn contestFunctionRes.decoded?.output;\n\t\t} catch(err) {\n\t\t\tconsole.error(`Contest function ${functionName} executeion failed: `, err);\n\t\t}\n\t}\n}\n\nconst tonApi = new TonApi();\n\nexport default tonApi;","export const SET_CONTEST_INFO = 'contest/SET_CONTEST_INFO';\nexport const SET_BULK_CONTESTS_INFO = 'contest/SET_BULK_CONTESTS_INFO';\nexport const ADD_BULK_CONTESTS_INFO = 'contest/ADD_BULK_CONTESTS_INFO';\nexport const SET_SUBMISSIONS_INFO = 'contest/SET_SUBMISSIONS_INFO';\nexport const SET_JURY_INFO = 'contest/SET_JURY_INFO';\nexport const UPDATE_SUBMISSION_REWARD = 'contest/UPDATE_SUBMISSION_REWARD';\nexport const SET_REMOVED_JUROR = 'contest/SET_REMOVED_JUROR';\n\nexport const setContestInfo = contest => dispatch => {\n\tdispatch({\n\t\ttype: SET_CONTEST_INFO,\n\t\tpayload: contest\n\t})\n}\n\nexport const setBulkContestsInfo = bulkContests => dispatch => {\n\tdispatch({\n\t\ttype: SET_BULK_CONTESTS_INFO,\n\t\tpayload: bulkContests\n\t})\n}\n\nexport const addBulkContestsInfo = bulkContests => dispatch => {\n\tdispatch({\n\t\ttype: ADD_BULK_CONTESTS_INFO,\n\t\tpayload: bulkContests\n\t})\n}\n\nexport const setSubmissionsInfo = (address, submissions) => dispatch => {\n\tdispatch({\n\t\ttype: SET_SUBMISSIONS_INFO,\n\t\tpayload: {\n\t\t\taddress,\n\t\t\tsubmissions,\n\t\t},\n\t})\n}\n\nexport const setJuryInfo = (address, juryStats) => dispatch => {\n\tdispatch({\n\t\ttype: SET_JURY_INFO,\n\t\tpayload: {\n\t\t\taddress,\n\t\t\tjuryStats,\n\t\t},\n\t})\n}\n\nexport const updateSubmissionReward = payload => dispatch => {\n\tdispatch({\n\t\ttype: UPDATE_SUBMISSION_REWARD,\n\t\tpayload,\n\t})\n}\n\nexport const setRemovedJuror = (address, juryAddr) => ({\n\ttype: SET_REMOVED_JUROR,\n\tpayload: {\n\t\taddress,\n\t\tjuryAddr,\n\t}\n});\n"],"sourceRoot":""}
{"version":3,"sources":["api/Database.js","store/actions/contest.js","store/reducers/contest.js","store/actions/common.js","store/reducers/common.js","store/reducers/index.js","store/index.js","components/App/index.js","components/icons/LensIcon.js","components/icons/ArrowIcon.js","components/icons/CheckedIcon.js","components/icons/BackIcon.js","helpers/getUTCDate.js","helpers/exportToExcel.js","helpers/sortSubmissions.js","helpers/parseRewards.js","helpers/processSubmissionsInfo.js","helpers/sortJury.js","helpers/createContestUrl.js","helpers/createWalletUrl.js","helpers/formatRewardToShow.js","helpers/calcRewardForJury.js","helpers/hooks/useSearchParams.js","components/SearchBar/index.js","components/Header/index.js","components/Contest/ContestHeader/index.js","components/Contest/ContestTableTh.js","components/Contest/styles.js","components/Contest/ContestTableHeader.js","components/Contest/ContestTableTd.js","components/Contest/RewardInput.js","components/Contest/ContestTableBody.js","components/Contest/index.js","components/ContestsList/ListItem.js","components/ContestsList/SubgovSwitcher.js","components/ContestsList/index.js","components/Loader/index.js","index.js","contest.abi.js","constants/index.js","api/Ton.js"],"names":["databaseApi","this","client","createClient","space","process","environment","accessToken","params","skip","governance","address","query","content_type","DB_CONTENT_TYPES","CONTEST","GOVERNANCE","getEntries","a","getContests","res","contestInfo","items","fields","name","console","warn","DEFAULT_GOVERNANCE","NAME","order","govRes","governances","map","item","error","SET_CONTEST_INFO","SET_BULK_CONTESTS_INFO","ADD_BULK_CONTESTS_INFO","SET_SUBMISSIONS_INFO","SET_JURY_INFO","UPDATE_SUBMISSION_REWARD","setContestInfo","contest","dispatch","type","payload","initialState","contestsInfo","submissionsInfo","jurorsInfo","contestReducer","state","action","forEach","submissions","juryStats","contestAddress","submissionId","reward","newSubmissionsInfo","contestSubmissions","updatedContestSubmissions","subm","id","SET_SELECTED_SUBGOV","selectedGovernance","fullName","FULL_NAME","commonReducer","rootReducer","combineReducers","common","middleware","thunk","composedEnhancers","compose","applyMiddleware","store","createStore","App","className","exact","path","component","ContestsList","Contest","Component","LensIcon","onClick","width","height","viewBox","fill","xmlns","d","stroke","y1","x2","y2","transform","ArrowIcon","CheckedIcon","x","y","BackIcon","strokeWidth","getUTCDate","date","Date","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","prepareSubmissions","place","score","acceptAmount","rejectAmount","participantAddress","link","fileLink","prepareJury","contestJury","jury","juryAddr","abstainAmount","totalVotes","push","juryRewardPercent","infoToStringify","title","infoToSend","JSON","stringify","fetch","method","headers","body","blob","url","document","createElement","download","href","click","downloadTable","URL","createObjectURL","exportToExcel","sortSubmissions","submission","sortBy","SORT_BY_VALUES_PARTICIPANTS","DEFAULT","isAskending","sortedSubmissions","sort","b","firstEl","secondEl","parseInt","parseRewards","rewards","parsedRewards","rewardsRange","split","rangeStart","rangeEnd","rangeStartNum","rangeEndNum","i","err","processSubmissionsInfo","initialSubmissionsInfo","contestRewards","submissionInfo","isRejected","marks","length","newSubmInfo","normalizedScore","reduce","previousValue","currentValue","toFixed","prevReward","prevSubmIndex","submissionsWithSameScore","submissionsWithFullInfo","index","initialArray","prevSubm","tempToCollectSequence","lastSequenceIndex","Object","keys","pop","submIndex","numberSubmIndex","isLastIndex","rewardsForSequence","values","rewardForSubmInSequence","submSeqIndex","getSubmissionsWithFullInfo","SCORE","sortJury","jurors","SORT_BY_VALUES_JURY","juryToSort","sortedJury","normalizedJury","acc","createContestUrl","createWalletUrl","wallet","EXPLORER_BASE_URL","formatRewardToShow","toLocaleString","calcRewardForJury","juryAcceptAmount","juryRejectAmount","totalAcceptAmount","totalRejectAmount","totalRewardForParticipants","useSearchParams","SearchBar","inputValue","isInvalidAddress","searchContest","props","history","TonApi","isAddressValid","setState","getContestInfo","contestInfoFromBlockchain","contestUrl","handleInputChange","event","target","value","handleKeyPress","shiftKey","key","altKey","preventDefault","searchBarClassName","placeholder","onChange","onKeyPress","SearchBarWithRedux","connect","withRouter","Header","match","useRouteMatch","to","ContestHeader","setJuryView","exportExcel","isJuryView","setJuryRewardPercent","isInputFilled","Number","isNaN","participantsButtonClassName","juryButtonClassName","juryRewardInputClassName","rel","undefined","percent","ContestTableTh","children","styles","fullClassName","style","hiddenTitleStyles","color","fontSize","greenCellStyles","redCellStyles","TableHeaderForParticipants","submissionsSortParams","field","placeClassName","PLACE","submissionClassName","SUBMISSION_ID","acceptedClassName","ACCEPTED","rejectedClassName","REJECTED","TableHeaderForJury","jurySortParams","idClassName","JURY_ID","votesCountClassName","TOTAL_VOTES","abstainedClassName","ABSTAINED","ContestTableHeader","colSpan","ContestTableTd","RewardInput","useState","setReward","useDispatch","updateRewardForSubmission","onBlur","ContestTableBody","collectionToRender","submissionsToRender","scoreToShow","rowClassName","walletUrl","shouldShowInput","rewardToShow","totalAccept","totalReject","totalAbstain","totalRewardForJury","juryToRender","juryVotes","isGrey","defaultSubmissionsSortParams","defaultJurySortParams","fetchSubmissionsInfo","addressFromUrl","contestInfoFromRedux","setSubmissionsInfo","setJuryInfo","fullContestInfo","getContestFullInfo","getContestSubmissionsAndJurors","submissionsWithStats","processedSubmissions","Promise","all","DatabaseApi","getContestByAddress","contestInfoFromDB","rewardPercent","newSortField","newSortParams","setTimeout","prevProps","log","ContestWithRedux","location","searchString","search","URLSearchParams","get","ListItem","contestDeadline","toDateString","linkAddress","listItemClassName","SubgovList","isListOpen","governancesToRender","gov","selectedSubgov","listClassName","SubgovSwitcher","switcherBlockRef","useRef","setIsListOpen","handleClickOutside","useCallback","current","contains","useEffect","addEventListener","removeEventListener","switcherBlockClassName","listGovernances","filter","ref","isLoaderVisible","fetchGovernances","getGovernances","fetchContests","setBulkContestsInfo","contestsFromDB","contestsWithFullInfo","contestFromDB","rest","renderContestItems","bulkContests","Loader","src","alt","require","config","init","ReactDOM","render","getElementById","contestAbi","module","exports","REWARD","EMPTY_ADDRESS","tonApi","bocCache","Map","TonClient","useBinaryLibrary","libWeb","network","server_address","runContestFunction","contendersInfo","getJuryStatsFromContract","juryStatsFromContract","ids","createdAtTimestamp","appliedAts","substr","createdAtDate","addrs","discussionLink","Buffer","from","forumLinks","toString","fileLinks","hash","hashes","createdAt","contactAddress","contacts","updateJurorsStatFromCollection","collection","stat","juryId","find","addr","normalizedId","getVotesPerJurorForSubmission","votesPerJuror","jurorsFor","jurorsAbstained","jurorsAgainst","sumbStats","submId","infoAndProgress","contestProgress","contractRes","utils","convert_address","output_format","result","functionName","functionInput","has","boc","eq","net","wait_for_collection","set","apiMessageParams","abi","call_set","function_name","signer","input","encode_message","abiMessage","tvm","run_tvm","message","account","contestFunctionRes","decoded","output"],"mappings":"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","file":"static/js/main.bdc4970b.chunk.js","sourcesContent":["import { createClient } from 'contentful';\nimport { DB_CONTENT_TYPES, DEFAULT_GOVERNANCE } from 'src/constants';\n\nclass DatabaseApi {\n\tinit() {\n\t\tthis.client = createClient({\n\t\t\tspace: process.env.REACT_APP_CONTENTFUL_SPACE_ID,\n\t\t\tenvironment: 'master',\n\t\t\taccessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN,\n\t\t})\n\t}\n\n\tgetContests(params = {}) {\n\t\tconst { skip = 0, governance, address } = params;\n\t\tconst query = {\n\t\t\tskip,\n\t\t\tcontent_type: DB_CONTENT_TYPES.CONTEST,\n\t\t};\n\n\t\tif (governance) {\n\t\t\tquery['fields.governance.sys.contentType.sys.id'] = DB_CONTENT_TYPES.GOVERNANCE;\n\t\t\tquery['fields.governance.fields.name'] = governance;\n\t\t}\n\n\t\tif (address)\n\t\t\tquery['fields.address'] = address;\n\n\t\treturn this.client.getEntries(query);\n\t}\n\n\tasync getContestByAddress(address) {\n\t\ttry {\n\t\t\tconst res = await this.getContests({ address });\n\t\t\tconst contestInfo = res.items[0].fields;\n\t\t\tcontestInfo.governance = contestInfo.governance.fields.name;\n\t\t\t\n\t\t\treturn contestInfo;\n\t\t} catch(err) {\n\t\t\tconsole.warn('No contest found in DB by address: ', address);\n\n\t\t\treturn {\n\t\t\t\tgovernance: DEFAULT_GOVERNANCE.NAME\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getGovernances() {\n\t\ttry {\n\t\t\tconst govRes = await this.client.getEntries({\n\t\t\t\tcontent_type: DB_CONTENT_TYPES.GOVERNANCE,\n\t\t\t\torder: 'fields.name',\n\t\t\t});\n\t\t\tconst governances = govRes.items.map(item => item.fields);\n\n\t\t\treturn governances\n\t\t} catch (err) {\n\t\t\tconsole.error('Failed to fetch governances: ', err);\n\n\t\t\treturn [];\n\t\t}\n\t}\n}\n\nconst databaseApi = new DatabaseApi();\n\nexport default databaseApi;","export const SET_CONTEST_INFO = 'contest/SET_CONTEST_INFO';\nexport const SET_BULK_CONTESTS_INFO = 'contest/SET_BULK_CONTESTS_INFO';\nexport const ADD_BULK_CONTESTS_INFO = 'contest/ADD_BULK_CONTESTS_INFO';\nexport const SET_SUBMISSIONS_INFO = 'contest/SET_SUBMISSIONS_INFO';\nexport const SET_JURY_INFO = 'contest/SET_JURY_INFO';\nexport const UPDATE_SUBMISSION_REWARD = 'contest/UPDATE_SUBMISSION_REWARD';\n\nexport const setContestInfo = contest => dispatch => {\n\tdispatch({\n\t\ttype: SET_CONTEST_INFO,\n\t\tpayload: contest\n\t})\n}\n\nexport const setBulkContestsInfo = bulkContests => dispatch => {\n\tdispatch({\n\t\ttype: SET_BULK_CONTESTS_INFO,\n\t\tpayload: bulkContests\n\t})\n}\n\nexport const addBulkContestsInfo = bulkContests => dispatch => {\n\tdispatch({\n\t\ttype: ADD_BULK_CONTESTS_INFO,\n\t\tpayload: bulkContests\n\t})\n}\n\nexport const setSubmissionsInfo = (address, submissions) => dispatch => {\n\tdispatch({\n\t\ttype: SET_SUBMISSIONS_INFO,\n\t\tpayload: {\n\t\t\taddress,\n\t\t\tsubmissions,\n\t\t},\n\t})\n}\n\nexport const setJuryInfo = (address, juryStats) => dispatch => {\n\tdispatch({\n\t\ttype: SET_JURY_INFO,\n\t\tpayload: {\n\t\t\taddress,\n\t\t\tjuryStats,\n\t\t},\n\t})\n}\n\nexport const updateSubmissionReward = payload => dispatch => {\n\tdispatch({\n\t\ttype: UPDATE_SUBMISSION_REWARD,\n\t\tpayload,\n\t})\n}\n","import {\n\tSET_CONTEST_INFO,\n\tSET_BULK_CONTESTS_INFO,\n\tADD_BULK_CONTESTS_INFO,\n\tSET_SUBMISSIONS_INFO,\n\tSET_JURY_INFO,\n\tUPDATE_SUBMISSION_REWARD,\n} from '../actions/contest';\n\nconst initialState = {\n\tcontestsInfo: {},\n\tsubmissionsInfo: {},\n\tjurorsInfo: {},\n}\n  \nfunction contestReducer(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_CONTEST_INFO: {\n\t\t\tconst contestsInfo = { ...state.contestsInfo };\n\t\t\tcontestsInfo[payload.address] = payload;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontestsInfo,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_BULK_CONTESTS_INFO: {\n\t\t\tconst contestsInfo = {};\n\n\t\t\tpayload.forEach(contest => {\n\t\t\t\tcontestsInfo[contest.address] = contest;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontestsInfo,\n\t\t\t}\n\t\t}\n\n\t\tcase ADD_BULK_CONTESTS_INFO: {\n\t\t\tconst contestsInfo = { ...state.contestsInfo };\n\n\t\t\tpayload.forEach(contest => {\n\t\t\t\tcontestsInfo[contest.address] = contest;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontestsInfo,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_SUBMISSIONS_INFO: {\n\t\t\tconst { address, submissions } = payload;\n\n\t\t\tconst submissionsInfo = { ...state.submissionsInfo };\n\t\t\tsubmissionsInfo[address] = submissions;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsubmissionsInfo,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_JURY_INFO: {\n\t\t\tconst { address, juryStats } = payload;\n\n\t\t\tconst jurorsInfo = { ...state.jurorsInfo };\n\t\t\tjurorsInfo[address] = juryStats;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tjurorsInfo,\n\t\t\t}\n\t\t}\n\n\t\tcase UPDATE_SUBMISSION_REWARD: {\n\t\t\tconst { contestAddress, submissionId, reward } = payload;\n\n\t\t\tconst newSubmissionsInfo = { ...state.submissionsInfo };\n\t\t\tconst contestSubmissions = newSubmissionsInfo[contestAddress];\n\t\t\tconst updatedContestSubmissions = contestSubmissions.map(subm => {\n\t\t\t\tif (subm.id === submissionId)\n\t\t\t\t\treturn { ...subm, reward }\n\t\t\t\t\n\t\t\t\treturn subm;\n\t\t\t});\n\t\t\tnewSubmissionsInfo[contestAddress] = updatedContestSubmissions;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsubmissionsInfo: newSubmissionsInfo,\n\t\t\t}\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default contestReducer\n","export const SET_SELECTED_SUBGOV = 'common/SET_SELECTED_SUBGOV';\n\nexport const setSelectedSubgov = selectedSubgov => dispatch => {\n\tdispatch({\n\t\ttype: SET_SELECTED_SUBGOV,\n\t\tpayload: selectedSubgov\n\t})\n}\n","import {\n\tSET_SELECTED_SUBGOV,\n} from '../actions/common';\nimport { DEFAULT_GOVERNANCE } from 'src/constants';\n\nconst initialState = {\n\tselectedGovernance: {\n\t\tname: DEFAULT_GOVERNANCE.NAME,\n\t\tfullName: DEFAULT_GOVERNANCE.FULL_NAME\n\t},\n}\n  \nfunction commonReducer(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_SELECTED_SUBGOV: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedGovernance: payload || initialState.selectedGovernance,\n\t\t\t}\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default commonReducer\n","import { combineReducers } from 'redux';\nimport contest from './contest';\nimport common from './common';\n\nconst rootReducer = combineReducers({\n\tcontest,\n\tcommon\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n\tthunk,\n];\n\nif (process.env.NODE_ENV === 'development') {\n\tconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n\tif (typeof devToolsExtension === 'function')\n\t\tenhancers.push(devToolsExtension());\n}\n\nconst composedEnhancers = compose(\n\tapplyMiddleware(...middleware),\n\t...enhancers,\n);\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\tcomposedEnhancers,\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Header, ContestsList, Contest } from 'src/components';\nimport './index.scss';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='app-container'>\n\t\t\t\t<div className='app-container__flex-wrapper'>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' component={ContestsList} />\n\t\t\t\t\t\t<Route path='/contest' component={Contest} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\n\nconst LensIcon = ({ onClick = () => false }) => (\n\t<svg\n\t\tclassName='lens-icon'\n\t\twidth='22'\n\t\theight='22'\n\t\tviewBox='0 0 22 22'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t\tonClick={onClick}\n\t>\n\t\t<path\n\t\t\td='M16.8881 8.72414C16.8881 13.2678 13.2179 16.9483 8.69405 16.9483C4.17023 16.9483 0.5 13.2678 0.5 8.72414C0.5 4.18044 4.17023 0.5 8.69405 0.5C13.2179 0.5 16.8881 4.18044 16.8881 8.72414Z'\n\t\t\tstroke='#6F6F6F'\n\t\t/>\n\t\t<line\n\t\t\ty1='-0.5'\n\t\t\tx2='9.63903'\n\t\t\ty2='-0.5'\n\t\t\ttransform='matrix(0.705884 0.708327 -0.705884 0.708327 14.3643 15.1724)'\n\t\t\tstroke='#6F6F6F'\n\t\t/>\n\t</svg>\n)\n\nexport default LensIcon;\n","import React from 'react';\n\nconst ArrowIcon = () => (\n\t<svg\n\t\tclassName='arrow-icon'\n\t\twidth='14'\n\t\theight='9'\n\t\tviewBox='0 0 14 9'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t>\n\t\t<path d='M6.76449 9L0.338936 0.230769L13.19 0.23077L6.76449 9Z' fill='#737373'/>\n\t</svg>\n)\n\nexport default ArrowIcon;\n","import React from 'react';\n\nconst CheckedIcon = () => (\n\t<svg\n\t\tclassName='checked-icon'\n\t\twidth='20'\n\t\theight='14'\n\t\tviewBox='0 0 20 14'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t>\n\t\t<rect x='1.63672' y='5.36548' width='9.96256' height='1.81138' transform='rotate(45 1.63672 5.36548)' fill='#6F6F6F'/>\n\t\t<rect x='19.0166' y='2.06494' width='16.4416' height='1.81138' transform='rotate(135 19.0166 2.06494)' fill='#6F6F6F'/>\n\t</svg>\n)\n\nexport default CheckedIcon;\n","import React from 'react';\n\nconst BackIcon = () => (\n\t<svg\n\t\tclassName='back-icon'\n\t\twidth='20'\n\t\theight='20'\n\t\tviewBox='0 0 20 20'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t>\n\t\t<path d='M11.0156 2L3.00018 10.0154L11.0156 18.0309' stroke='#5287C3' strokeWidth='3'/>\n\t</svg>\n)\n\nexport default BackIcon;\n","function getUTCDate(date) {\n\treturn new Date(\n\t\tdate.getUTCFullYear(),\n\t\tdate.getUTCMonth(),\n\t\tdate.getUTCDate(),\n\t\tdate.getUTCHours(),\n\t\tdate.getUTCMinutes(),\n\t\tdate.getUTCSeconds(),\n\t);\n}\n\nexport default getUTCDate;\n","function prepareSubmissions(contestSubmissions) {\n\treturn contestSubmissions.map(subm => ({\n\t\tplace: subm.place,\n\t\treward: subm.reward === -1 ? 0 : subm.reward,\n\t\tid: subm.id,\n\t\tscore: subm.score,\n\t\tacceptAmount: subm.acceptAmount,\n\t\trejectAmount: subm.rejectAmount,\n\t\taddress: subm.participantAddress,\n\t\tlink: subm.fileLink,\n\t}));\n}\n\nfunction prepareJury(contestJury) {\n\tconst jury = [];\n\n\tfor (const juryAddr in contestJury) {\n\t\tconst {\n\t\t\tacceptAmount = 0,\n\t\t\tabstainAmount = 0,\n\t\t\trejectAmount = 0,\n\t\t\tid,\n\t\t} = contestJury[juryAddr];\n\t\tconst totalVotes = acceptAmount + rejectAmount + abstainAmount;\n\n\t\tjury.push({\n\t\t\tid,\n\t\t\ttotalVotes,\n\t\t\tacceptAmount,\n\t\t\tabstainAmount,\n\t\t\trejectAmount,\n\t\t\taddress: juryAddr,\n\t\t})\n\t}\n\n\treturn jury;\n}\n\nasync function exportToExcel(contestInfo, contestSubmissions, contestJury, juryRewardPercent) {\n\tconst submissions = prepareSubmissions(contestSubmissions);\n\tconst jury = prepareJury(contestJury);\n\n\tconst infoToStringify = {\n\t\ttitle: contestInfo.title,\n\t\tlink: contestInfo.link,\n\t\tsubmissions,\n\t\tjury,\n\t\tjuryRewardPercent,\n\t}\n\n\tconst infoToSend = JSON.stringify(infoToStringify);\n\n\tconst res = await fetch('/api/v1/export-excel', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: infoToSend,\n\t});\n\n\tconst blob = await res.blob();\n\n\tconst downloadTable = url => {\n\t\tconst link = document.createElement('a');\n\t\tlink.download = `${infoToStringify.title}.xlsx`;\n\t\tlink.href = url;\n\t\tlink.click();\n\t};\n\n\tdownloadTable(URL.createObjectURL(blob));\n}\n\nexport default exportToExcel;","import { SORT_BY_VALUES_PARTICIPANTS } from 'src/constants';\n\nfunction sortSubmissions(submission, sortBy = SORT_BY_VALUES_PARTICIPANTS.DEFAULT, isAskending = false) {\n\tconst sortedSubmissions = submission.sort((a, b) => {\n\t\tlet firstEl = a[sortBy], secondEl = b[sortBy];\n\n\t\tif (typeof firstEl === 'string')\n\t\t\tfirstEl = parseInt(firstEl, 10);\n\n\t\tif (typeof secondEl === 'string')\n\t\t\tsecondEl = parseInt(secondEl, 10);\n\n\t\tconst compared = isAskending ? firstEl - secondEl : secondEl - firstEl;\n\n\t\treturn compared;\n\t})\n\n\treturn sortedSubmissions;\n}\n\nexport default sortSubmissions;\n","const REWARDS_RANGE_SEPARATOR = '-';\n\nfunction parseRewards(rewards) {\n\tif (!rewards)\n\t\treturn false;\n\n\ttry {\n\t\tconst parsedRewards = {};\n\n\t\tfor (const rewardsRange in rewards) {\n\t\t\tconst [rangeStart, rangeEnd] = rewardsRange.split(REWARDS_RANGE_SEPARATOR);\n\n\t\t\tif (rangeEnd) {\n\t\t\t\tconst rangeStartNum = parseInt(rangeStart, 10);\n\t\t\t\tconst rangeEndNum = parseInt(rangeEnd, 10);\n\n\t\t\t\tfor (let i = rangeStartNum; i <= rangeEndNum; i++) {\n\t\t\t\t\tparsedRewards[i] = rewards[rewardsRange];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparsedRewards[rangeStart] = rewards[rangeStart];\n\t\t\t}\n\t\t}\n\n\t\treturn parsedRewards;\n\t} catch(err) {\n\t\tconsole.error('Error while parsing rewards: ', err);\n\n\t\treturn false;\n\t}\n}\n\nexport default parseRewards;\n","import { SORT_BY_VALUES_PARTICIPANTS } from 'src/constants';\nimport sortSubmissions from './sortSubmissions';\nimport parseRewards from './parseRewards';\n\nfunction processSubmissionsInfo(initialSubmissionsInfo, contestRewards) {\n\tconst submissions = initialSubmissionsInfo.map(submissionInfo => {\n\t\tconst isRejected = submissionInfo.marks.length === 0\n\t\t\t? submissionInfo.rejectAmount > 0\n\t\t\t: submissionInfo.marks.length / submissionInfo.rejectAmount < 1;\n\t\tconst newSubmInfo = { ...submissionInfo, isRejected };\n\n\t\tif (isRejected) {\n\t\t\tnewSubmInfo.reward = 0;\n\t\t\tnewSubmInfo.score = 0;\n\t\t} else {\n\t\t\tconst marksSum = newSubmInfo.marks.reduce((previousValue, currentValue) => {\n\t\t\t\treturn previousValue + parseInt(currentValue, 10);\n\t\t\t}, 0);\n\n\t\t\tconst score = marksSum / newSubmInfo.marks.length;\n\t\t\tconst normalizedScore = score.toFixed(2);\n\t\t\tnewSubmInfo.score = +normalizedScore;\n\t\t}\n\n\t\tnewSubmInfo.acceptAmount = newSubmInfo.marks.length;\n\n\t\treturn newSubmInfo;\n\t});\n\n\tconst sortedSubmissions = sortSubmissions(submissions, SORT_BY_VALUES_PARTICIPANTS.SCORE);\n\tconst submissionsWithFullInfo = getSubmissionsWithFullInfo(sortedSubmissions, contestRewards);\n\n\treturn submissionsWithFullInfo;\n}\n\nfunction getSubmissionsWithFullInfo(sortedSubmissions, contestRewards) {\n\tconst parsedRewards = parseRewards(contestRewards);\n\tconst submissionsWithSameScore = {};\n\tlet prevReward;\n\n\tconst submissionsWithFullInfo = sortedSubmissions.map((subm, index, initialArray) => {\n\t\tconst prevSubm = initialArray[index - 1];\n\t\tconst place = index + 1;\n\t\tlet reward;\n\n\t\tif (subm.isRejected) {\n\t\t\treward = 0;\n\t\t} else if (parsedRewards) {\n\t\t\treward = parsedRewards[place] || 0;\n\t\t} else {\n\t\t\treward = -1;\n\t\t}\n\n\t\tif (prevSubm && prevSubm.score === subm.score && subm.score !== 0) {\n\t\t\tsubmissionsWithSameScore[index - 1] = prevReward;\n\t\t\tsubmissionsWithSameScore[index] = reward;\n\t\t}\n\n\t\tprevReward = reward;\n\n\t\treturn {\n\t\t\t...subm,\n\t\t\tplace,\n\t\t\treward,\n\t\t}\n\t})\n\n\tlet tempToCollectSequence = {}, prevSubmIndex;\n\tconst lastSequenceIndex = +Object.keys(submissionsWithSameScore).pop();\n\tfor (const submIndex in submissionsWithSameScore) {\n\t\tconst numberSubmIndex = +submIndex;\n\t\tconst isLastIndex = numberSubmIndex === lastSequenceIndex;\n\t\tconst shouldCollectSequence = (!prevSubmIndex\n\t\t\t|| (\n\t\t\t\tprevSubmIndex + 1 === numberSubmIndex\n\t\t\t\t&& submissionsWithFullInfo[prevSubmIndex].score === submissionsWithFullInfo[numberSubmIndex].score\n\t\t\t))\n\t\t\t&& !isLastIndex\n\n\t\tif (shouldCollectSequence) {\n\t\t\ttempToCollectSequence[numberSubmIndex] = submissionsWithSameScore[numberSubmIndex];\n\t\t} else {\n\t\t\tif (isLastIndex)\n\t\t\t\ttempToCollectSequence[numberSubmIndex] = submissionsWithSameScore[numberSubmIndex];\n\n\t\t\tconst rewardsForSequence = Object.values(tempToCollectSequence);\n\t\t\tconst totalRewardForSequence = rewardsForSequence.reduce((previousValue, currentValue) => {\n\t\t\t\treturn previousValue + currentValue;\n\t\t\t}, 0);\n\n\t\t\tconst rewardForSubmInSequence = totalRewardForSequence / rewardsForSequence.length;\n\n\t\t\tfor (const submSeqIndex in tempToCollectSequence) {\n\t\t\t\tsubmissionsWithFullInfo[submSeqIndex].reward = rewardForSubmInSequence;\n\t\t\t}\n\n\t\t\ttempToCollectSequence = {\n\t\t\t\t[numberSubmIndex]: submissionsWithSameScore[numberSubmIndex]\n\t\t\t};\n\t\t}\n\n\t\tprevSubmIndex = numberSubmIndex;\n\t}\n\n\treturn submissionsWithFullInfo;\n}\n\nexport default processSubmissionsInfo;\n","import { SORT_BY_VALUES_JURY } from 'src/constants';\n\nfunction sortJury(jurors, sortBy = SORT_BY_VALUES_JURY.DEFAULT, isAskending = false) {\n\tconst juryToSort = [];\n\n\tfor (const juryAddr in jurors) {\n\t\tconst {\n\t\t\tacceptAmount = 0,\n\t\t\tabstainAmount = 0,\n\t\t\trejectAmount = 0,\n\t\t\tid,\n\t\t} = jurors[juryAddr];\n\t\tconst totalVotes = acceptAmount + rejectAmount + abstainAmount;\n\n\t\tjuryToSort.push({\n\t\t\taddress: juryAddr,\n\t\t\tacceptAmount,\n\t\t\tabstainAmount,\n\t\t\trejectAmount,\n\t\t\ttotalVotes,\n\t\t\tid,\n\t\t})\n\t}\n\n\tconst sortedJury = juryToSort.sort((a, b) => {\n\t\tlet firstEl = a[sortBy], secondEl = b[sortBy];\n\n\t\tif (typeof firstEl === 'string')\n\t\t\tfirstEl = parseInt(firstEl, 10);\n\n\t\tif (typeof secondEl === 'string')\n\t\t\tsecondEl = parseInt(secondEl, 10);\n\n\t\tconst compared = isAskending ? firstEl - secondEl : secondEl - firstEl;\n\n\t\treturn compared;\n\t})\n\n\tconst normalizedJury = sortedJury.reduce((acc, jury) => {\n\t\tconst  { \n\t\t\taddress,\n\t\t\tacceptAmount,\n\t\t\tabstainAmount,\n\t\t\trejectAmount,\n\t\t\tid,\n\t\t } = jury;\n\t\treturn {\n\t\t\t...acc,\n\t\t\t[address]: {\n\t\t\t\tacceptAmount,\n\t\t\t\tabstainAmount,\n\t\t\t\trejectAmount,\n\t\t\t\tid,\n\t\t\t}\n\t\t}\n\t}, {});\n\n\treturn normalizedJury;\n}\n\nexport default sortJury;\n","function createContestUrl(contestAddress) {\n\treturn `/contest?contestAddress=${contestAddress}`;\n}\n\nexport default createContestUrl;\n","import { EXPLORER_BASE_URL } from 'src/constants';\n\nfunction createWalletUrl(wallet) {\n\treturn `${EXPLORER_BASE_URL}${wallet}`;\n}\n\nexport default createWalletUrl;\n","function formatRewardToShow(reward) {\n\treturn reward.toLocaleString();\n}\n\nexport default formatRewardToShow;\n","function calcRewardForJury(\n\tjuryAcceptAmount,\n\tjuryRejectAmount,\n\ttotalAcceptAmount,\n\ttotalRejectAmount,\n\ttotalRewardForParticipants,\n\tjuryRewardPercent,\n) {\n\treturn (juryAcceptAmount + juryRejectAmount) / (totalAcceptAmount + totalRejectAmount) * totalRewardForParticipants * juryRewardPercent / 100\n}\n\nexport default calcRewardForJury;\n","import { useLocation } from 'react-router-dom';\n\nfunction useSearchParams() {\n\treturn new URLSearchParams(useLocation().search);\n}\n\nexport default useSearchParams;","/* eslint-disable camelcase */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setContestInfo } from 'src/store/actions/contest';\nimport { TonApi } from 'src/api';\nimport { createContestUrl } from 'src/helpers';\nimport { LensIcon } from 'src/components/icons';\nimport './index.scss';\n\nclass SearchBar extends Component {\n\tstate = {\n\t\tinputValue: '',\n\t\tisInvalidAddress: false,\n\t}\n\n\tsearchContest = async () => {\n\t\tconst { inputValue: contestAddress } = this.state;\n\t\tconst { contestsInfo, history, setContestInfo } = this.props;\n\n\t\tif (!contestAddress)\n\t\t\treturn;\n\n\t\tconst isValidAddress = await TonApi.isAddressValid(contestAddress);\n\n\t\tif (!isValidAddress)\n\t\t\treturn this.setState({ isInvalidAddress: true });\n\n\t\tconst contestInfoFromRedux = contestsInfo[contestAddress];\n\n\t\tif (!contestInfoFromRedux) {\n\t\t\tconst contestInfoFromBlockchain = await TonApi.getContestInfo(contestAddress);\n\n\t\t\tif (!contestInfoFromBlockchain)\n\t\t\t\treturn this.setState({ isInvalidAddress: true });\n\t\t\n\t\t\tcontestInfoFromBlockchain.address = contestAddress;\n\t\t\tsetContestInfo(contestInfoFromBlockchain);\n\t\t}\n\n\t\tconst contestUrl = createContestUrl(contestAddress);\n\n\t\treturn history.push(contestUrl);\n\t}\n\n\thandleInputChange = event => {\n\t\tthis.setState({\n\t\t\tinputValue: event.target.value,\n\t\t\tisInvalidAddress: false,\n\t\t});\n\t}\n\n\thandleKeyPress = event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldSearch = isEnter && !shiftKey && !altKey;\n\n\t\tif (shouldSearch) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.searchContest();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { inputValue, isInvalidAddress } = this.state;\n\n\t\tconst searchBarClassName = `search-bar-container ${isInvalidAddress ? 'search-bar-container--invalid' : ''}`;\n\n\t\treturn (\n\t\t\t<div className={searchBarClassName}>\n\t\t\t\t<input\n\t\t\t\t\tclassName='search-bar-container__input'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Enter contest address'\n\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\tonKeyPress={this.handleKeyPress}\n\t\t\t\t/>\n\t\t\t\t<LensIcon onClick={this.searchContest} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ contest }) => {\n\tconst { contestsInfo } = contest;\n\n\treturn { contestsInfo }\n};\n\nconst SearchBarWithRedux = connect(mapStateToProps, {\n\tsetContestInfo,\n})(SearchBar);\n\nexport default withRouter(SearchBarWithRedux);\n","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { BackIcon } from 'src/components/icons';\nimport SearchBar from '../SearchBar';\nimport './index.scss';\n\nconst Header = () => {\n\tconst match = useRouteMatch('/contest');\n\n\treturn (\n\t\t<header className='header-container'>\n\t\t\t<Link to='/'><h1>Free TON Contests Results</h1></Link>\n\t\t\t{match\n\t\t\t\t&& <Link to='/' className='header-container__back-button'>\n\t\t\t\t\t<BackIcon />\n\t\t\t\t\t<p>Back</p>\n\t\t\t\t</Link>\n\t\t\t}\n\t\t\t<SearchBar />\n\t\t\t<div className='header-container__address-explanation'>\n\t\t\t\tWhere to find contest address?\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import React from 'react';\nimport { CheckedIcon } from 'src/components/icons';\n\nimport './index.scss';\n\nconst ContestHeader = ({\n\tcontestInfo, setJuryView, exportExcel, isJuryView, juryRewardPercent, setJuryRewardPercent\n}) => {\n\tconst handleInputChange = event => {\n\t\tif (!event.target.value)\n\t\t\treturn setJuryRewardPercent(undefined);\n\n\t\tconst percent = +event.target.value;\n\n\t\tif (percent && !Number.isNaN(percent)) {\n\t\t\tsetJuryRewardPercent(percent);\n\t\t}\n\t}\n\n\tconst isInputFilled = typeof juryRewardPercent === 'number' && !Number.isNaN(juryRewardPercent);\n\n\tconst participantsButtonClassName = `contest-header__participants-view-button ${isJuryView\n\t\t? '' : 'contest-header__participants-view-button--active'\n\t}`;\n\tconst juryButtonClassName = `contest-header__jury-view-button ${isJuryView\n\t\t? 'contest-header__jury-view-button--active' : ''\n\t}`;\n\tconst juryRewardInputClassName = `contest-header__reward-input-container ${isInputFilled\n\t\t? 'contest-header__reward-input-container--filled' : ''\n\t}`\n\n\n\treturn (\n\t\t<div className='contest-header'>\n\t\t\t<div className='contest-header__header'>Results</div>\n\t\t\t<a\n\t\t\t\thref={contestInfo.link}\n\t\t\t\ttarget='_blank'\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\tclassName='contest-header__title'\n\t\t\t>\n\t\t\t\t{contestInfo.title}\n\t\t\t</a>\n\t\t\t<div className='contest-header__controls'>\n\t\t\t\t<div className='contest-header__view-switcher'>\n\t\t\t\t\t<div onClick={() => setJuryView(false)} className={participantsButtonClassName}>\n\t\t\t\t\t\tParticipants\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={() => setJuryView(true)} className={juryButtonClassName}>\n\t\t\t\t\t\tJury\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{isJuryView\n\t\t\t\t\t&& <div className={juryRewardInputClassName}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='contest-header__reward-input'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Enter jury reward %'\n\t\t\t\t\t\t\tvalue={juryRewardPercent}\n\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CheckedIcon />\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t<div onClick={exportExcel} className='contest-header__export-button'>\n\t\t\t\t\tExport to .xlsx\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ContestHeader;\n","import React from 'react'\n\nconst ContestTableTh = ({ children, className, onClick = () => false, styles = {} }) => {\n\tlet fullClassName = 'contest-table__cell contest-table__cell--th';\n\n\tif (className)\n\t\tfullClassName += ' ' + className;\n\n\treturn (\n\t\t<th\n\t\t\tstyle={styles}\n\t\t\tonClick={onClick}\n\t\t\tclassName={fullClassName}\n\t\t>\n\t\t\t{children}\n\t\t</th>\n\t)\n}\n\nexport default ContestTableTh;","export const hiddenTitleStyles = {\n\tcolor: '#0F8CFF',\n\tfontSize: '26px'\n}\n\nexport const greenCellStyles = {\n\tcolor: '#0D9F1C',\n}\n\nexport const redCellStyles = {\n\tcolor: '#D20808',\n}\n","import React from 'react';\nimport Th from './ContestTableTh';\nimport { hiddenTitleStyles } from './styles';\nimport { SORT_BY_VALUES_PARTICIPANTS, SORT_BY_VALUES_JURY } from 'src/constants';\nimport { ArrowIcon } from 'src/components/icons';\n\nconst ContestTableHeader = ({\n\tcontestInfo, isJuryView, submissionsSortParams, jurySortParams, sortSubmissions, sortJury\n}) => {\n\tconst { title } = contestInfo;\n\n\treturn (\n\t\t<thead className='contest-table__header'>\n\t\t\t<tr className='contest-table__header-hidden-line'><th colSpan='7'/></tr>\n\t\t\t<tr className='contest-table__header-hidden-line'>\n\t\t\t\t<th colSpan='7' style={hiddenTitleStyles}><a href={contestInfo.link}>{title}</a></th>\n\t\t\t</tr>\n\t\t\t{\n\t\t\t\tisJuryView\n\t\t\t\t\t? <TableHeaderForJury\n\t\t\t\t\t\tjurySortParams={jurySortParams}\n\t\t\t\t\t\tsortJury={sortJury}\n\t\t\t\t\t/>\n\t\t\t\t\t: <TableHeaderForParticipants\n\t\t\t\t\t\tsubmissionsSortParams={submissionsSortParams}\n\t\t\t\t\t\tsortSubmissions={sortSubmissions}\n\t\t\t\t\t/>\n\t\t\t}\n\t\t</thead>\n\t)\n}\n\nconst TableHeaderForParticipants = ({ submissionsSortParams, sortSubmissions }) => {\n\tconst { field, isAskending } = submissionsSortParams;\n\tconst placeClassName = `${field === SORT_BY_VALUES_PARTICIPANTS.PLACE ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`;\n\tconst submissionClassName = `${field === SORT_BY_VALUES_PARTICIPANTS.SUBMISSION_ID ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`;\n\tconst acceptedClassName = `${field === SORT_BY_VALUES_PARTICIPANTS.ACCEPTED ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`\n\tconst rejectedClassName = `${field === SORT_BY_VALUES_PARTICIPANTS.REJECTED ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`\n\n\treturn (\n\t\t<tr className='contest-table__row'>\n\t\t\t<Th \n\t\t\t\tclassName={placeClassName}\n\t\t\t\tonClick={() => sortSubmissions(SORT_BY_VALUES_PARTICIPANTS.PLACE)}\n\t\t\t>\n\t\t\t\tPlace\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th>Reward</Th>\n\t\t\t<Th\n\t\t\t\tclassName={submissionClassName}\n\t\t\t\tonClick={() => sortSubmissions(SORT_BY_VALUES_PARTICIPANTS.SUBMISSION_ID)}\n\t\t\t>\n\t\t\t\tSubmission №\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th>Avg. Score</Th>\n\t\t\t<Th\n\t\t\t\tclassName={acceptedClassName}\n\t\t\t\tonClick={() => sortSubmissions(SORT_BY_VALUES_PARTICIPANTS.ACCEPTED)}\n\t\t\t>\n\t\t\t\tAccepted\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th\n\t\t\t\tclassName={rejectedClassName}\n\t\t\t\tonClick={() => sortSubmissions(SORT_BY_VALUES_PARTICIPANTS.REJECTED)}\n\t\t\t>\n\t\t\t\tRejected\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th className='contest-table__cell--wallet'>Wallet</Th>\n\t\t</tr>\n\t)\n};\n\nconst TableHeaderForJury = ({ jurySortParams, sortJury }) => {\n\tconst { field, isAskending } = jurySortParams;\n\tconst idClassName = `${field === SORT_BY_VALUES_JURY.JURY_ID ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`;\n\tconst votesCountClassName = `${field === SORT_BY_VALUES_JURY.TOTAL_VOTES ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`;\n\tconst acceptedClassName = `${field === SORT_BY_VALUES_JURY.ACCEPTED ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`\n\tconst abstainedClassName = `${field === SORT_BY_VALUES_JURY.ABSTAINED ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`\n\tconst rejectedClassName = `${field === SORT_BY_VALUES_JURY.REJECTED ? `contest-table__cell--active ${\n\t\tisAskending ? 'contest-table__cell--askending' : ''\n\t}` : 'contest-table__cell--selectable'}`\n\n\treturn (\n\t\t<tr className='contest-table__row'>\n\t\t\t<Th\n\t\t\t\tclassName={idClassName}\n\t\t\t\tonClick={() => sortJury(SORT_BY_VALUES_JURY.JURY_ID)}\n\t\t\t>\n\t\t\t\tJury №\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th>Reward</Th>\n\t\t\t<Th\n\t\t\t\tclassName={votesCountClassName}\n\t\t\t\tonClick={() => sortJury(SORT_BY_VALUES_JURY.TOTAL_VOTES)}\n\t\t\t>\n\t\t\t\tVotes Count\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th\n\t\t\t\tclassName={acceptedClassName}\n\t\t\t\tonClick={() => sortJury(SORT_BY_VALUES_JURY.ACCEPTED)}\n\t\t\t>\n\t\t\t\tAccepted\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th\n\t\t\t\tclassName={abstainedClassName}\n\t\t\t\tonClick={() => sortJury(SORT_BY_VALUES_JURY.ABSTAINED)}\n\t\t\t>\n\t\t\t\tAbstained\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th\n\t\t\t\tclassName={rejectedClassName}\n\t\t\t\tonClick={() => sortJury(SORT_BY_VALUES_JURY.REJECTED)}\n\t\t\t>\n\t\t\t\tRejected\n\t\t\t\t<ArrowIcon />\n\t\t\t</Th>\n\t\t\t<Th className='contest-table__cell--wallet'>Wallet</Th>\n\t\t</tr>\n\t)\n}\n\nexport default ContestTableHeader;\n","import React from 'react'\n\nconst ContestTableTd = ({ children, className, styles = {} }) => {\n\tlet fullClassName = 'contest-table__cell';\n\n\tif (className)\n\t\tfullClassName += ' ' + className;\n\n\treturn (\n\t\t<td\n\t\t\tstyle={styles}\n\t\t\tclassName={fullClassName}\n\t\t>\n\t\t\t{children}\n\t\t</td>\n\t)\n}\n\nexport default ContestTableTd;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateSubmissionReward } from 'src/store/actions/contest';\n\nconst RewardInput = ({ contestAddress, submissionId }) => {\n\tconst [reward, setReward] = useState();\n\tconst dispatch = useDispatch();\n\n\tconst handleInputChange = event => {\n\t\tif (!event.target.value)\n\t\t\treturn setReward(undefined);\n\n\t\tconst percent = +event.target.value;\n\n\t\tif (percent && !Number.isNaN(percent)) {\n\t\t\tsetReward(percent);\n\t\t}\n\t}\n\n\tconst updateRewardForSubmission = () => {\n\t\tif (reward) {\n\t\t\tdispatch(updateSubmissionReward({\n\t\t\t\tcontestAddress,\n\t\t\t\tsubmissionId,\n\t\t\t\treward\n\t\t\t}))\n\t\t}\n\t}\n\n\tconst handleKeyPress = event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldSetReward = isEnter && !shiftKey && !altKey;\n\n\t\tif (shouldSetReward) {\n\t\t\tevent.preventDefault();\n\t\t\tupdateRewardForSubmission();\n\t\t}\n\t}\n\n\treturn (\n\t\t<input\n\t\t\tclassName='contest-table__reward-input'\n\t\t\ttype='text'\n\t\t\tplaceholder='Enter reward'\n\t\t\tvalue={reward}\n\t\t\tonChange={handleInputChange}\n\t\t\tonBlur={updateRewardForSubmission}\n\t\t\tonKeyPress={handleKeyPress}\n\t\t/>\n\t)\n}\n\nexport default RewardInput\n","import React from 'react';\nimport { createWalletUrl, formatRewardToShow, calcRewardForJury } from 'src/helpers';\nimport Td from './ContestTableTd';\nimport RewardInput from './RewardInput';\nimport { greenCellStyles, redCellStyles } from './styles';\n\nconst ContestTableBody = ({\n\tcontestSubmissions, isJuryView, contestJury, juryRewardPercent, contestAddress\n}) => {\n\tif (!contestSubmissions.length)\n\t\treturn (<div>no subm</div>)\n\n\tlet totalRewardForParticipants = 0;\n\n\tconst submissionsToRender = contestSubmissions.map((submission, index) => {\n\t\tconst hasReward = typeof submission.reward === 'number' && !Number.isNaN(submission.reward);\n\t\tif (hasReward && submission.reward > 0)\n\t\t\ttotalRewardForParticipants += submission.reward;\n\n\t\tconst scoreToShow = submission.score.toFixed(2);\n\t\tconst isGrey = index === 0 || index % 2 === 0;\n\t\tconst rowClassName = `contest-table__row ${isGrey\n\t\t\t? 'contest-table__row--grey' : ''\n\t\t} ${submission.isRejected ? 'contest-table__row--rejected' : ''}`;\n\t\tconst walletUrl = createWalletUrl(submission.participantAddress);\n\n\t\tconst shouldShowInput = !submission.isRejected && submission.reward === -1;\n\t\tconst rewardToShow = formatRewardToShow(submission.reward);\n\n\t\treturn (\n\t\t\t<tr className={rowClassName} key={`${submission.participantAddress}${submission.id}`}>\n\t\t\t\t<Td>{submission.place}</Td>\n\t\t\t\t<Td>\n\t\t\t\t\t{shouldShowInput\n\t\t\t\t\t\t? <RewardInput\n\t\t\t\t\t\t\tcontestAddress={contestAddress}\n\t\t\t\t\t\t\tsubmissionId={submission.id}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t: rewardToShow\n\t\t\t\t\t}\n\t\t\t\t</Td>\n\t\t\t\t<Td>\n\t\t\t\t\t{submission.fileLink\n\t\t\t\t\t\t? <a href={submission.fileLink} target='_blank' rel=\"noreferrer\">{submission.id}</a>\n\t\t\t\t\t\t: submission.id\n\t\t\t\t\t}\n\t\t\t\t</Td>\n\t\t\t\t<Td>{scoreToShow}</Td>\n\t\t\t\t<Td styles={greenCellStyles}>{submission.acceptAmount}</Td>\n\t\t\t\t<Td styles={redCellStyles}>{submission.rejectAmount}</Td>\n\t\t\t\t<Td className='contest-table__cell--wallet'>\n\t\t\t\t\t<a href={walletUrl} target='_blank' rel=\"noreferrer\">{submission.participantAddress}</a>\n\t\t\t\t</Td>\n\t\t\t</tr>\n\t\t)\n\t});\n\n\tlet collectionToRender;\n\tlet totalAccept = 0, totalReject = 0, totalAbstain = 0, totalRewardForJury = 0;\n\n\tif (isJuryView) {\n\t\tconst juryToRender = [];\n\n\t\tObject.values(contestJury).forEach(jury => {\n\t\t\tconst {\n\t\t\t\tacceptAmount = 0,\n\t\t\t\tabstainAmount = 0,\n\t\t\t\trejectAmount = 0,\n\t\t\t} = jury\n\n\t\t\ttotalAccept += acceptAmount;\n\t\t\ttotalReject += rejectAmount;\n\t\t\ttotalAbstain += abstainAmount;\n\t\t});\n\n\t\tfor (const juryAddr in contestJury) {\n\t\t\tconst {\n\t\t\t\tacceptAmount = 0,\n\t\t\t\tabstainAmount = 0,\n\t\t\t\trejectAmount = 0,\n\t\t\t\tid,\n\t\t\t} = contestJury[juryAddr];\n\t\t\tconst juryVotes = acceptAmount + rejectAmount + abstainAmount;\n\t\t\tlet reward\n\n\t\t\tif (typeof juryRewardPercent === 'number' && !Number.isNaN(juryRewardPercent) && totalRewardForParticipants) {\n\t\t\t\treward = calcRewardForJury(acceptAmount, rejectAmount, totalAccept, totalReject, totalRewardForParticipants, juryRewardPercent);\n\t\t\t\ttotalRewardForJury += reward;\n\t\t\t}\n\t\t\t\n\t\t\tconst isGrey = juryToRender.length === 0 || juryToRender.length % 2 === 0;\n\t\t\tconst rowClassName = `contest-table__row ${isGrey ? 'contest-table__row--grey' : ''}`;\n\t\t\tconst walletUrl = createWalletUrl(juryAddr);\n\t\t\tconst rewardToShow = formatRewardToShow(+reward.toFixed(2));\n\n\t\t\tjuryToRender.push(\n\t\t\t\t<tr className={rowClassName} key={juryAddr}>\n\t\t\t\t\t<Td>{id}</Td>\n\t\t\t\t\t<Td>{rewardToShow}</Td>\n\t\t\t\t\t<Td>{juryVotes}</Td>\n\t\t\t\t\t<Td styles={greenCellStyles}>{acceptAmount}</Td>\n\t\t\t\t\t<Td>{abstainAmount}</Td>\n\t\t\t\t\t<Td styles={redCellStyles}>{rejectAmount}</Td>\n\t\t\t\t\t<Td className='contest-table__cell--wallet'>\n\t\t\t\t\t\t<a href={walletUrl} target='_blank' rel=\"noreferrer\">{juryAddr}</a>\n\t\t\t\t\t</Td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t}\n\n\t\tcollectionToRender = juryToRender;\n\t} else {\n\t\tcollectionToRender = submissionsToRender;\n\t}\n\n\treturn (\n\t\t<tbody>\n\t\t\t{collectionToRender}\n\t\t\t<tr className='contest-table__row contest-table__row--total-row'>\n\t\t\t\t<Td>Total</Td>\n\t\t\t\t{\n\t\t\t\t\tisJuryView\n\t\t\t\t\t? <>\n\t\t\t\t\t\t<Td>{totalRewardForJury ? formatRewardToShow(+totalRewardForJury.toFixed(2)) : ''}</Td>\n\t\t\t\t\t\t<Td>{totalAccept + totalReject + totalAbstain}</Td>\n\t\t\t\t\t\t<Td styles={greenCellStyles}>{totalAccept}</Td>\n\t\t\t\t\t\t<Td>{totalAbstain}</Td>\n\t\t\t\t\t\t<Td styles={redCellStyles}>{totalReject}</Td>\n\t\t\t\t\t\t<Td />\n\t\t\t\t\t</>\n\t\t\t\t\t: <>\n\t\t\t\t\t\t<Td>{formatRewardToShow(totalRewardForParticipants) || ''}</Td>\n\t\t\t\t\t\t<Td />\n\t\t\t\t\t\t<Td />\n\t\t\t\t\t\t<Td />\n\t\t\t\t\t\t<Td />\n\t\t\t\t\t\t<Td />\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</tr>\n\t\t</tbody>\n\t)\n}\n\nexport default ContestTableBody;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { TonApi, DatabaseApi } from 'src/api';\nimport { exportToExcel, processSubmissionsInfo, sortSubmissions, sortJury } from 'src/helpers';\nimport { setContestInfo, setSubmissionsInfo, setJuryInfo } from 'src/store/actions/contest';\nimport { SORT_BY_VALUES_PARTICIPANTS, SORT_BY_VALUES_JURY } from 'src/constants';\nimport { Loader } from 'src/components';\nimport ContestHeader from './ContestHeader';\nimport ContestTableHeader from './ContestTableHeader';\nimport ContestTableBody from './ContestTableBody';\nimport './index.scss';\n\nconst defaultSubmissionsSortParams = {\n\tfield: SORT_BY_VALUES_PARTICIPANTS.DEFAULT,\n\tisAskending: true,\n}\n\nconst defaultJurySortParams = {\n\tfield: SORT_BY_VALUES_JURY.DEFAULT,\n\tisAskending: true,\n}\n\nclass Contest extends Component {\n\tstate = {\n\t\tisJuryView: false,\n\t\tjuryRewardPercent: undefined,\n\t\tsubmissionsSortParams: defaultSubmissionsSortParams,\n\t\tjurySortParams: defaultJurySortParams,\n\t}\n\n\tcomponentDidMount() {\n\t\ttry {\n\t\t\tthis.fetchSubmissionsInfo();\n\t\t} catch(err) {\n\t\t\tconsole.error('Fetching submissions failed: ', err);\n\n\t\t\tsetTimeout(this.fetchSubmissionsInfo, 5000);\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\ttry {\n\t\t\tconst { addressFromUrl } = this.props;\n\n\t\t\tif (prevProps.addressFromUrl !== addressFromUrl) {\n\t\t\t\tthis.setJuryView(false);\n\t\t\t\tthis.setState({\n\t\t\t\t\tisJuryView: false,\n\t\t\t\t\tjuryRewardPercent: undefined,\n\t\t\t\t\tsubmissionsSortParams: defaultSubmissionsSortParams,\n\t\t\t\t\tjurySortParams: defaultJurySortParams,\n\t\t\t\t});\n\t\t\t\tthis.fetchSubmissionsInfo();\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.error('Fetching submissions failed: ', err);\n\n\t\t\tsetTimeout(this.fetchSubmissionsInfo, 5000);\n\t\t}\n\t}\n\n\tfetchSubmissionsInfo = async () => {\n\t\tconst {\n\t\t\taddressFromUrl,\n\t\t\tcontestInfo: contestInfoFromRedux,\n\t\t\tsetContestInfo,\n\t\t\tsetSubmissionsInfo,\n\t\t\tsetJuryInfo,\n\t\t\thistory\n\t\t} = this.props;\n\t\tconst { jurySortParams } = this.state;\n\n\t\tconst isValidAddress = await TonApi.isAddressValid(addressFromUrl);\n\n\t\tif (!isValidAddress)\n\t\t\treturn history.push('/');\n\n\t\tlet fullContestInfo = contestInfoFromRedux;\n\n\t\tif (!fullContestInfo) {\n\t\t\tfullContestInfo = await this.getContestFullInfo(addressFromUrl);\n\n\t\t\tsetContestInfo(fullContestInfo);\n\t\t}\n\n\t\tif (fullContestInfo.juryRewardPercent)\n\t\t\tthis.setJuryRewardPercent(fullContestInfo.juryRewardPercent);\n\n\t\tconst { submissionsWithStats, juryStats } = await TonApi.getContestSubmissionsAndJurors(addressFromUrl);\n\t\tconst processedSubmissions = processSubmissionsInfo(submissionsWithStats, fullContestInfo.rewards);\n\t\tconst sortedJury = sortJury(juryStats, jurySortParams.field, jurySortParams.isAskending);\n\n\t\tsetSubmissionsInfo(addressFromUrl, processedSubmissions);\n\t\tsetJuryInfo(addressFromUrl, sortedJury);\n\t}\n\n\tgetContestFullInfo = async address => {\n\t\tconst [contestInfoFromBlockchain, contestInfoFromDB] = await Promise.all([\n\t\t\tTonApi.getContestInfo(address),\n\t\t\tDatabaseApi.getContestByAddress(address)\n\t\t]);\n\t\tconst { governance } = contestInfoFromDB;\n\n\t\treturn {\n\t\t\t...contestInfoFromBlockchain,\n\t\t\t...contestInfoFromDB,\n\t\t\taddress,\n\t\t\tgovernance,\n\t\t}\n\t}\n\n\texportExcel = async () => {\n\t\tconst { contestInfo, contestSubmissions, contestJury } = this.props;\n\t\tconst { juryRewardPercent } = this.state;\n\n\t\ttry {\n\t\t\tawait exportToExcel(contestInfo, contestSubmissions, contestJury, juryRewardPercent);\n\t\t} catch(err) {\n\t\t\tconsole.error('Table export failed: ', err);\n\t\t}\n\t}\n\n\tsetJuryView = isJuryView => {\n\t\tthis.setState({ isJuryView });\n\t}\n\n\tsetJuryRewardPercent = rewardPercent => {\n\t\tthis.setState({ juryRewardPercent: rewardPercent });\n\t}\n\n\tsortJury = newSortField => {\n\t\tconst { contestJury, setJuryInfo, addressFromUrl } = this.props;\n\t\tconst { field, isAskending } = this.state.jurySortParams;\n\t\tconst isAskendingChange = newSortField === field;\n\n\t\tconst newSortParams = {\n\t\t\tfield: newSortField,\n\t\t\tisAskending: isAskendingChange ? !isAskending : isAskending,\n\t\t}\n\n\t\tconst sortedJury = sortJury(\n\t\t\tcontestJury,\n\t\t\tnewSortParams.field,\n\t\t\tnewSortParams.isAskending\n\t\t);\n\n\t\tsetJuryInfo(addressFromUrl, sortedJury);\n\t\tthis.setState({ jurySortParams: newSortParams });\n\t}\n\n\tsortSubmissions = newSortField => {\n\t\tconst { contestSubmissions, setSubmissionsInfo, addressFromUrl } = this.props;\n\t\tconst { field, isAskending } = this.state.submissionsSortParams;\n\t\tconst isAskendingChange = newSortField === field;\n\n\t\tconst newSortParams = {\n\t\t\tfield: newSortField,\n\t\t\tisAskending: isAskendingChange ? !isAskending : isAskending,\n\t\t}\n\n\t\tconst sortedSubmissions = sortSubmissions(\n\t\t\tcontestSubmissions,\n\t\t\tnewSortParams.field,\n\t\t\tnewSortParams.isAskending\n\t\t);\n\n\t\tsetSubmissionsInfo(addressFromUrl, sortedSubmissions);\n\t\tthis.setState({ submissionsSortParams: newSortParams });\n\t}\n\n\trender() {\n\t\tconst { contestSubmissions, contestInfo, contestJury, addressFromUrl } = this.props;\n\t\tconst { isJuryView, juryRewardPercent, submissionsSortParams, jurySortParams } = this.state;\n\n\t\tif (!contestInfo || !contestSubmissions || !contestJury)\n\t\t\treturn (<div className='contest'><Loader /></div>)\n\n\t\tconsole.log(contestInfo, contestSubmissions, contestJury);\n\t\treturn (\n\t\t\t<div className='contest'>\n\t\t\t\t<ContestHeader\n\t\t\t\t\tcontestInfo={contestInfo}\n\t\t\t\t\tisJuryView={isJuryView}\n\t\t\t\t\tjuryRewardPercent={juryRewardPercent}\n\t\t\t\t\tsetJuryView={this.setJuryView}\n\t\t\t\t\tsetJuryRewardPercent={this.setJuryRewardPercent}\n\t\t\t\t\texportExcel={this.exportExcel}\n\t\t\t\t/>\n\t\t\t\t<div className='contest-table-wrapper'>\n\t\t\t\t\t<table className='contest-table'>\n\t\t\t\t\t\t<ContestTableHeader\n\t\t\t\t\t\t\tcontestInfo={contestInfo}\n\t\t\t\t\t\t\tisJuryView={isJuryView}\n\t\t\t\t\t\t\tsubmissionsSortParams={submissionsSortParams}\n\t\t\t\t\t\t\tjurySortParams={jurySortParams}\n\t\t\t\t\t\t\tsortSubmissions={this.sortSubmissions}\n\t\t\t\t\t\t\tsortJury={this.sortJury}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ContestTableBody\n\t\t\t\t\t\t\tcontestSubmissions={contestSubmissions}\n\t\t\t\t\t\t\tcontestJury={contestJury}\n\t\t\t\t\t\t\tcontestAddress={addressFromUrl}\n\t\t\t\t\t\t\tisJuryView={isJuryView}\n\t\t\t\t\t\t\tjuryRewardPercent={juryRewardPercent}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ contest }, { location }) => {\n\tconst { contestsInfo, submissionsInfo, jurorsInfo } = contest;\n\n\tconst searchString = location.search;\n\tconst searchParams = new URLSearchParams(searchString);\n\tconst addressFromUrl = searchParams.get('contestAddress');\n\tconst contestInfo = contestsInfo[addressFromUrl];\n\tconst contestSubmissions = submissionsInfo[addressFromUrl];\n\tconst contestJury = jurorsInfo[addressFromUrl];\n\n\treturn {\n\t\tcontestInfo,\n\t\tcontestSubmissions,\n\t\tcontestJury,\n\t\taddressFromUrl,\n\t}\n};\n\nconst ContestWithRedux = connect(mapStateToProps, {\n\tsetContestInfo,\n\tsetSubmissionsInfo,\n\tsetJuryInfo,\n})(Contest);\n\nexport default withRouter(ContestWithRedux);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUTCDate, createContestUrl } from 'src/helpers';\n\nconst ListItem = ({ contest, isGrey }) => {\n\tconst date = getUTCDate(new Date(contest.contestDeadline * 1000)).toDateString();\n\tconst linkAddress = createContestUrl(contest.address);\n\tconst listItemClassName = `contests-list__item ${isGrey ? 'contests-list__item--grey' : ''}`;\n\n\treturn (\n\t\t<Link to={linkAddress} className={listItemClassName}>\n\t\t\t<div className='contests-list__item-title'>\n\t\t\t\t{contest.title}\n\t\t\t</div>\n\t\t\t<div className='contests-list__item-date'>\n\t\t\t\t{date}\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n\nexport default ListItem;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setSelectedSubgov } from 'src/store/actions/common';\nimport { ArrowIcon } from 'src/components/icons';\n\nconst SubgovSwitcher = ({ governances, selectedGovernance }) => {\n\tconst switcherBlockRef = useRef(null);\n\tconst [isListOpen, setIsListOpen] = useState(false);\n\n\tconst handleClickOutside = useCallback(event => {\n\t\tif (!switcherBlockRef?.current?.contains(event.target) && isListOpen)\n\t\t\tsetIsListOpen(false);\n\t}, [isListOpen]);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', handleClickOutside);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', handleClickOutside);\n\t\t}\n\t}, [handleClickOutside]);\n\n\tconst switcherBlockClassName = `subgov-switcher__switch-block ${isListOpen\n\t\t? 'subgov-switcher__switch-block--active' : ''\n\t}`\n\n\tconst listGovernances = governances.filter(gov => gov.name !== selectedGovernance.name);\n\n\treturn (\n\t\t<div className='subgov-switcher'>\n\t\t\t<div className='subgov-switcher__title'>Contests</div>\n\t\t\t<div\n\t\t\t\tref={switcherBlockRef}\n\t\t\t\tonClick={() => setIsListOpen(!isListOpen)}\n\t\t\t\tclassName={switcherBlockClassName}\n\t\t\t>\n\t\t\t\t{`Subgov: ${selectedGovernance.fullName}`}\n\t\t\t\t<ArrowIcon />\n\t\t\t\t<SubgovList isListOpen={isListOpen} governances={listGovernances} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst SubgovList = ({ governances, isListOpen }) => {\n\tconst dispatch = useDispatch();\n\n\tconst governancesToRender = governances.map(gov => (\n\t\t<div\n\t\t\tclassName='subgov-switcher__list-item'\n\t\t\tonClick={() => dispatch(setSelectedSubgov(gov))}\n\t\t\tkey={gov.name}\n\t\t>\n\t\t\t{gov.fullName}\n\t\t</div>\n\t))\n\n\tconst listClassName = `subgov-switcher__list ${isListOpen\n\t\t? 'subgov-switcher__list--visible' : ''\n\t}`;\n\n\treturn (\n\t\t<div className={listClassName}>\n\t\t\t{governancesToRender}\n\t\t</div>\n\t);\n}\n\nexport default SubgovSwitcher;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DatabaseApi, TonApi } from 'src/api';\nimport { setBulkContestsInfo } from 'src/store/actions/contest';\nimport { Loader } from 'src/components'; \nimport ContestListItem from './ListItem';\nimport SubgovSwitcher from './SubgovSwitcher';\nimport './index.scss';\n\nclass ContestsList extends Component {\n\tstate = {\n\t\tgovernances: [],\n\t\tisLoaderVisible: false,\n\t}\n\n\tasync componentDidMount() {\n\t\ttry {\n\t\t\tconst { contestsInfo } = this.props;\n\n\t\t\tif (!contestsInfo.length)\n\t\t\t\tthis.setState({ isLoaderVisible: true });\n\n\t\t\tawait this.fetchGovernances();\n\t\t\tawait this.fetchContests();\n\n\t\t\tthis.setState({ isLoaderVisible: false });\n\t\t} catch(err) {\n\t\t\tconsole.error('Fetching contests failed: ', err);\n\n\t\t\tsetTimeout(async () => {\n\t\t\t\tawait this.fetchGovernances();\n\t\t\t\tawait this.fetchContests();\n\t\t\t\tthis.setState({ isLoaderVisible: false });\n\t\t\t}, 5000);\n\t\t}\n\t}\n\n\tasync componentDidUpdate(prevProps) {\n\t\ttry {\n\t\t\tif (prevProps.selectedGovernance.name !== this.props.selectedGovernance.name) {\n\t\t\t\tthis.setState({ isLoaderVisible: true });\n\t\t\t\tawait this.fetchContests();\n\t\t\t\tthis.setState({ isLoaderVisible: false });\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.error('Fetching contests failed: ', err);\n\n\t\t\tsetTimeout(this.fetchContests, 5000);\n\t\t}\n\t}\n\n\tfetchGovernances = async () => {\n\t\tconst governances = await DatabaseApi.getGovernances();\n\n\t\tthis.setState({ governances });\n\t}\n\n\tfetchContests = async () => {\n\t\tconst { setBulkContestsInfo, selectedGovernance } = this.props;\n\n\t\tconst contestsFromDB = await DatabaseApi.getContests({ governance: selectedGovernance.name });\n\t\tconst contestsWithFullInfo = await Promise.all(\n\t\t\tcontestsFromDB.items.map(contest => this.getContestFullInfo(contest))\n\t\t);\n\n\t\tsetBulkContestsInfo(contestsWithFullInfo);\n\t}\n\n\tgetContestFullInfo = async contestFromDB => {\n\t\tconst { address, governance, ...rest } = contestFromDB.fields;\n\t\tconst contestInfoFromBlockchain = await TonApi.getContestInfo(address);\n\n\t\treturn {\n\t\t\t...contestInfoFromBlockchain,\n\t\t\t...rest,\n\t\t\taddress,\n\t\t\tgovernance: governance.fields.name,\n\t\t}\n\t}\n\n\trenderContestItems = () => {\n\t\tconst { contestsInfo } = this.props;\n\t\tconst contestItems = contestsInfo.map((contest, index) => (\n\t\t\t<ContestListItem\n\t\t\t\tisGrey={index % 2 === 0 || index === 0}\n\t\t\t\tcontest={contest}\n\t\t\t\tkey={contest.address}\n\t\t\t/>\n\t\t));\n\n\t\treturn contestItems;\n\t}\n\n\trender() {\n\t\tconst { contestsInfo, selectedGovernance } = this.props;\n\t\tconst { governances, isLoaderVisible } = this.state;\n\n\t\treturn (\n\t\t\t<div className='contests-list'>\n\t\t\t\t<SubgovSwitcher\n\t\t\t\t\tgovernances={governances}\n\t\t\t\t\tselectedGovernance={selectedGovernance}\n\t\t\t\t/>\n\t\t\t\t{!contestsInfo.length || isLoaderVisible ? <Loader /> : this.renderContestItems()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ contest, common }) => {\n\tconst { contestsInfo } = contest;\n\tconst { selectedGovernance } = common;\n\n\treturn {\n\t\tcontestsInfo: Object.values(contestsInfo),\n\t\tselectedGovernance,\n\t}\n};\n\nexport default connect(mapStateToProps, {\n\tsetBulkContestsInfo,\n})(ContestsList);\n","import React from 'react';\nimport './index.scss';\n\nconst Loader = () => {\n\treturn (\n\t\t<div className='loader'>\n\t\t\t<img className='loader__cat' src='/loader.gif' alt='Loading...' />\n\t\t</div>\n\t);\n}\n\nexport default Loader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\nimport { TonApi, DatabaseApi } from 'src/api';\nimport store from 'src/store'\nimport { App } from 'src/components';\n\nimport 'src/styles/index.scss';\n\nrequire('dotenv').config();\n\nTonApi.init();\nDatabaseApi.init();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n","const contestAbi = {\n\t'ABI version': 2,\n\t'header': ['pubkey', 'time'],\n\t'functions': [\n\t\t{\n\t\t\t'name': 'constructor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'title', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'link', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'hash', 'type': 'uint256' },\n\t\t\t\t{ 'name': 'juryAddr', 'type': 'address' },\n\t\t\t\t{ 'name': 'juryKeys', 'type': 'uint256[]' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'setupContest',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'startsIn', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'lastsFor', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'setupJurors',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'jurors', 'type': 'address[]' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'rejectApplicant',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'submitWithContact',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'participant', 'type': 'address' },\n\t\t\t\t{ 'name': 'forumLink', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'fileLink', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'hash', 'type': 'uint256' },\n\t\t\t\t{ 'name': 'contact', 'type': 'address' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'submit',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'participant', 'type': 'address' },\n\t\t\t\t{ 'name': 'forumLink', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'fileLink', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'hash', 'type': 'uint256' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'openContest',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'closeContest',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'openVoting',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'closeVoting',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'rejectVote',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'voteFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'mark', 'type': 'uint32' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'voteForCommented',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'mark', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'comment', 'type': 'bytes' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'abstain',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'comment', 'type': 'bytes' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'voteAgainst',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'comment', 'type': 'bytes' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'finalizeResults',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'votingEndsIn',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'daysLeft', 'type': 'uint64' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'contestStartCountdown',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'secondsLeft', 'type': 'int64' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'contestCountdown',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'secondsLeft', 'type': 'int64' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'votingCountdown',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'secondsLeft', 'type': 'int64' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getId',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'addr', 'type': 'address' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'value0', 'type': 'uint16' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'listContenders',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'ids', 'type': 'uint16[]' },\n\t\t\t\t{ 'name': 'addresses', 'type': 'address[]' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getStatsFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'totalPoints', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'avgHi', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'avgLo', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'jurorsVoted', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'accepted', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'abstained', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'rejected', 'type': 'uint16' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getVotesPerJuror',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'jurorsFor', 'type': 'address[]' },\n\t\t\t\t{ 'name': 'marks', 'type': 'uint32[]' },\n\t\t\t\t{ 'name': 'commentsFor', 'type': 'bytes[]' },\n\t\t\t\t{ 'name': 'jurorsAbstained', 'type': 'address[]' },\n\t\t\t\t{ 'name': 'commentsAbstained', 'type': 'bytes[]' },\n\t\t\t\t{ 'name': 'jurorsAgainst', 'type': 'address[]' },\n\t\t\t\t{ 'name': 'commentsAgainst', 'type': 'bytes[]' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getJuryStats',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'components': [{ 'name': 'id', 'type': 'uint16' }, { 'name': 'addr', 'type': 'address' }], 'name': 'jury', 'type': 'map(uint256,tuple)' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getContestStats',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'totalScore', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'avgHi', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'avgLo', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'jurorsVoted', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'entries', 'type': 'uint16' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getContestInfo',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'title', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'link', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'hash', 'type': 'uint256' },\n\t\t\t\t{ 'name': 'juryAddr', 'type': 'address' },\n\t\t\t\t{ 'name': 'juryKeys', 'type': 'uint256[]' },\n\t\t\t\t{ 'name': 'juryAddresses', 'type': 'address[]' },\n\t\t\t\t{ 'name': 'maxVotingAttempts', 'type': 'uint8' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getContestProgress',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'votesCount', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'contendersCount', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'contestOpen', 'type': 'bool' },\n\t\t\t\t{ 'name': 'votingOpen', 'type': 'bool' },\n\t\t\t\t{ 'name': 'contestDeadline', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'votingDeadline', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'resultsFinalized', 'type': 'bool' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getInfoFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'addr', 'type': 'address' },\n\t\t\t\t{ 'name': 'forumLink', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'fileLink', 'type': 'bytes' },\n\t\t\t\t{ 'name': 'hash', 'type': 'uint256' },\n\t\t\t\t{ 'name': 'appliedAt', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'contact', 'type': 'address' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getContendersInfo',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'ids', 'type': 'uint16[]' },\n\t\t\t\t{ 'name': 'addrs', 'type': 'address[]' },\n\t\t\t\t{ 'name': 'forumLinks', 'type': 'bytes[]' },\n\t\t\t\t{ 'name': 'fileLinks', 'type': 'bytes[]' },\n\t\t\t\t{ 'name': 'hashes', 'type': 'uint256[]' },\n\t\t\t\t{ 'name': 'appliedAts', 'type': 'uint64[]' },\n\t\t\t\t{ 'name': 'contacts', 'type': 'address[]' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getVotes',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'votes', 'type': 'uint64' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getVotesFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'votes', 'type': 'uint16' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getTotalRatingFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'rating', 'type': 'uint64' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'resultsFinalized',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'flag', 'type': 'bool' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getFinalStatusFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'status', 'type': 'bool' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getFinalStatus',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'status', 'type': 'bool[]' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getFinalContestStats',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'totalScore', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'avgHi', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'avgLo', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'jurorsVoted', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'entries', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'passed', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'rejected', 'type': 'uint16' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getFinalStatsFor',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'id', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'status', 'type': 'bool' },\n\t\t\t\t{ 'name': 'totalPoints', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'avgHi', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'avgLo', 'type': 'uint32' },\n\t\t\t\t{ 'name': 'jurorsVoted', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'accepted', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'abstained', 'type': 'uint16' },\n\t\t\t\t{ 'name': 'rejected', 'type': 'uint16' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'getFinalVotingData',\n\t\t\t'inputs': [\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t\t{ 'name': 'ids', 'type': 'uint16[]' },\n\t\t\t\t{ 'name': 'juryAddresses', 'type': 'address[]' },\n\t\t\t\t{ 'name': 'statuses', 'type': 'bool[]' },\n\t\t\t\t{ 'name': 'totalRatings', 'type': 'uint64[]' },\n\t\t\t\t{ 'name': 'jurorsVoted', 'type': 'uint16[]' },\n\t\t\t\t{ 'name': 'votesFor', 'type': 'uint16[]' },\n\t\t\t\t{ 'name': 'votesAbstained', 'type': 'uint16[]' },\n\t\t\t\t{ 'name': 'votesAgainst', 'type': 'uint16[]' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'transfer',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'dest', 'type': 'address' },\n\t\t\t\t{ 'name': 'value', 'type': 'uint64' },\n\t\t\t\t{ 'name': 'bounce', 'type': 'bool' },\n\t\t\t\t{ 'name': 'flags', 'type': 'uint16' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'forceContest',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'flag', 'type': 'bool' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'forceVoting',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'flag', 'type': 'bool' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'forceFinalize',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'flag', 'type': 'bool' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'setContestDeadline',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'time', 'type': 'uint64' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'setVotingDeadline',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'time', 'type': 'uint64' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'name': 'upgrade',\n\t\t\t'inputs': [\n\t\t\t\t{ 'name': 'c', 'type': 'cell' },\n\t\t\t],\n\t\t\t'outputs': [\n\t\t\t],\n\t\t},\n\t],\n\t'data': [\n\t\t{ 'key': 1, 'name': 'debugNonce', 'type': 'uint256' },\n\t],\n\t'events': [\n\t],\n};\n\nexport default contestAbi;\n","const EMPTY_ADDRESS = '0:0000000000000000000000000000000000000000000000000000000000000000';\n\nconst EXPLORER_BASE_URL = 'https://ton.live/accounts/accountDetails?id=';\n\nconst DEFAULT_GOVERNANCE = {\n\tNAME: 'main',\n\tFULL_NAME: 'Main',\n}\n\nconst SORT_BY_VALUES_PARTICIPANTS = {\n\tDEFAULT: 'place',\n\tPLACE: 'place',\n\tREWARD: 'reward',\n\tSUBMISSION_ID: 'id',\n\tSCORE: 'score',\n\tACCEPTED: 'acceptAmount',\n\tREJECTED: 'rejectAmount',\n}\n\nconst SORT_BY_VALUES_JURY = {\n\tDEFAULT: 'id',\n\tREWARD: 'reward',\n\tJURY_ID: 'id',\n\tTOTAL_VOTES: 'totalVotes',\n\tACCEPTED: 'acceptAmount',\n\tABSTAINED: 'abstainAmount',\n\tREJECTED: 'rejectAmount',\n}\n\nconst DB_CONTENT_TYPES = {\n\tCONTEST: 'contest',\n\tGOVERNANCE: 'governance',\n}\n\nmodule.exports = {\n\tSORT_BY_VALUES_PARTICIPANTS,\n\tSORT_BY_VALUES_JURY,\n\tEMPTY_ADDRESS,\n\tEXPLORER_BASE_URL,\n\tDB_CONTENT_TYPES,\n\tDEFAULT_GOVERNANCE,\n}\n","import { TonClient } from '@tonclient/core';\nimport { libWeb } from '@tonclient/lib-web';\n\nimport contestAbi from 'src/contest.abi';\n\nclass TonApi {\n\tconstructor() {\n\t\tthis.bocCache = new Map();\n\t}\n\n\tinit() {\n\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\t\tTonClient.useBinaryLibrary(libWeb);\n\n\t\tthis.client = new TonClient({\n\t\t\tnetwork: {\n\t\t\t\tserver_address: 'main.ton.dev',\n\t\t\t},\n\t\t});\n\t}\n\n\tasync getContestSubmissionsAndJurors(contestAddress) {\n\t\tif (!contestAddress)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tconst contendersInfo = await this.runContestFunction(contestAddress, 'getContendersInfo');\n\t\t\tconst juryStatsFromContract = await this.getJuryStatsFromContract(contestAddress);\n\n\t\t\tconst submissions = contendersInfo.ids.map((id, index) => {\n\t\t\t\tconst createdAtTimestamp = parseInt(contendersInfo.appliedAts[index].substr(0, 10), 10);\n\t\t\t\tconst createdAtDate = new Date(createdAtTimestamp * 1000);\n\n\t\t\t\treturn {\n\t\t\t\t\tid: parseInt(id, 10),\n\t\t\t\t\ttitle: `Submission ${parseInt(id, 10)}`,\n\t\t\t\t\tparticipantAddress: contendersInfo.addrs[index],\n\t\t\t\t\tdiscussionLink: Buffer.from(contendersInfo.forumLinks[index], 'hex').toString(),\n\t\t\t\t\tfileLink: Buffer.from(contendersInfo.fileLinks[index], 'hex').toString(),\n\t\t\t\t\thash: contendersInfo.hashes[index],\n\t\t\t\t\tcreatedAt: createdAtDate,\n\t\t\t\t\tcreatedAtTimestamp,\n\t\t\t\t\tcontactAddress: contendersInfo.contacts[index],\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst juryStats = {};\n\t\t\tconst submissionsWithStats = await Promise.all(\n\t\t\t\tsubmissions.map(async subm => { \n\t\t\t\t\tconst votesPerJuror = await this.getVotesPerJurorForSubmission(contestAddress, subm.id);\n\t\t\t\t\tconst {\n\t\t\t\t\t\tjurorsFor,\n\t\t\t\t\t\tjurorsAbstained,\n\t\t\t\t\t\tjurorsAgainst,\n\t\t\t\t\t\tmarks,\n\t\t\t\t\t} = votesPerJuror;\n\n\t\t\t\t\tconst sumbStats = {\n\t\t\t\t\t\tmarks: marks,\n\t\t\t\t\t\tabstainAmount: jurorsAbstained.length,\n\t\t\t\t\t\trejectAmount: jurorsAgainst.length,\n\t\t\t\t\t};\n\n\t\t\t\t\tfunction updateJurorsStatFromCollection(collection, stat) {\n\t\t\t\t\t\tcollection.forEach(address => {\n\t\t\t\t\t\t\tif (juryStats[address]) {\n\t\t\t\t\t\t\t\tjuryStats[address][stat] = (juryStats[address][stat] || 0) + 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst juryId = juryStatsFromContract.find(stat => stat.addr === address)?.id;\n\t\t\t\t\t\t\t\tconst normalizedId = typeof juryId === 'string'\n\t\t\t\t\t\t\t\t\t? parseInt(juryId, 10) + 1\n\t\t\t\t\t\t\t\t\t: juryId;\n\n\t\t\t\t\t\t\t\tjuryStats[address] = {\n\t\t\t\t\t\t\t\t\t[stat]: 1,\n\t\t\t\t\t\t\t\t\tid: normalizedId,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tupdateJurorsStatFromCollection(jurorsFor, 'acceptAmount');\n\t\t\t\t\tupdateJurorsStatFromCollection(jurorsAbstained, 'abstainAmount');\n\t\t\t\t\tupdateJurorsStatFromCollection(jurorsAgainst, 'rejectAmount');\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...subm,\n\t\t\t\t\t\t...sumbStats,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\n\t\t\treturn { submissionsWithStats, juryStats };\n\t\t} catch(err) {\n\t\t\tconsole.error('Getting contest submissions failed: ', err);\n\n\t\t\treturn { submissionsWithStats: [], juryStats: {} };\n\t\t}\n\t}\n\n\tasync getVotesPerJurorForSubmission(contestAddress, submId) {\n\t\tif (!contestAddress || !submId)\n\t\t\treturn;\n\n\t\tconst votesPerJuror = await this.runContestFunction(\n\t\t\tcontestAddress,\n\t\t\t'getVotesPerJuror',\n\t\t\t{ id: submId },\n\t\t);\n\n\t\treturn votesPerJuror;\n\t}\n\n\tasync getContestInfo(contestAddress) {\n\t\ttry {\n\t\t\tconst infoAndProgress = await Promise.all([\n\t\t\t\tthis.runContestFunction(contestAddress, 'getContestInfo'),\n\t\t\t\tthis.runContestFunction(contestAddress, 'getContestProgress'),\n\t\t\t]);\n\t\t\tconst [contestInfo, contestProgress] = infoAndProgress;\n\n\t\t\tconst link = Buffer.from(contestInfo.link, 'hex').toString();\n\t\t\tconst title = Buffer.from(contestInfo.title, 'hex').toString();\n\t\n\t\t\treturn {\n\t\t\t\t...contestInfo,\n\t\t\t\t...contestProgress,\n\t\t\t\tlink,\n\t\t\t\ttitle,\n\t\t\t};\n\t\t} catch(err) {\n\t\t\tconsole.error('Getting full contest info failed:', err);\n\t\t}\n\t}\n\n\tasync getJuryStatsFromContract(contestAddress) {\n\t\tconst contractRes = await this.runContestFunction(\n\t\t\tcontestAddress,\n\t\t\t'getJuryStats',\n\t\t);\n\n\t\tif (!contractRes?.jury)\n\t\t\treturn [];\n\n\t\treturn Object.values(contractRes.jury);\n\t}\n\n\tasync isAddressValid(address) {\n\t\ttry {\n\t\t\tconst result = await this.client.utils.convert_address({\n\t\t\t\taddress,\n\t\t\t\toutput_format: {\n\t\t\t\t\ttype: 'Hex',\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn !!result;\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tasync runContestFunction(contestAddress, functionName, functionInput) {\n\t\ttry {\n\t\t\tlet boc;\n\n\t\t\tif (this.bocCache.has(contestAddress)) {\n\t\t\t\tboc = this.bocCache.get(contestAddress);\n\t\t\t} else {\n\t\t\t\tconst params = {\n\t\t\t\t\tcollection: 'accounts',\n\t\t\t\t\tfilter: {\n\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\teq: contestAddress,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tresult: 'id, boc',\n\t\t\t\t};\n\t\t\n\t\t\t\tconst res = await this.client.net.wait_for_collection(params);\n\t\n\t\t\t\tboc = res.result.boc;\n\t\t\t\tthis.bocCache.set(contestAddress, boc);\n\t\t\t}\n\n\t\t\tconst apiMessageParams = {\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: contestAbi,\n\t\t\t\t},\n\t\t\t\taddress: contestAddress,\n\t\t\t\tcall_set: {\n\t\t\t\t\tfunction_name: functionName,\n\t\t\t\t},\n\t\t\t\tsigner: {\n\t\t\t\t\ttype: 'None',\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tif (functionInput)\n\t\t\t\tapiMessageParams.call_set.input = functionInput;\n\t\n\t\t\tconst abiMessage = await this.client.abi.encode_message(apiMessageParams);\n\t\n\t\t\tconst contestFunctionRes = await this.client.tvm.run_tvm({\n\t\t\t\tmessage: abiMessage.message,\n\t\t\t\taccount: boc,\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: contestAbi,\n\t\t\t\t},\n\t\t\t});\n\t\n\t\t\treturn contestFunctionRes.decoded?.output;\n\t\t} catch(err) {\n\t\t\tconsole.error(`Contest function ${functionName} executeion failed: `, err);\n\t\t}\n\t}\n}\n\nconst tonApi = new TonApi();\n\nexport default tonApi;"],"sourceRoot":""}